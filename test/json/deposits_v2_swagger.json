{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "deposits"
  },
  "host": "localhost:8889",
  "basePath": "/api",
  "tags": [
    {
      "name": "DepositAccountDocuments",
      "description": "Allows to retrieve a deposit account document (populated template) by provided deposit account id and template id."
    },
    {
      "name": "DepositAccounts",
      "description": "Allows you to retrieve, create, update or delete deposit accounts."
    },
    {
      "name": "FundedLoanAccounts",
      "description": "Allows retrieval of the loan account schedule for a loan account with the given id or encodedKey and funded by the deposit account with the given id or encodedKey."
    },
    {
      "name": "DepositTransactions",
      "description": "Allows to perform deposit transaction operations in async for deposit accounts."
    },
    {
      "name": "DepositTransactionAsync"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/deposits/{depositAccountId}/cards/{cardReferenceToken}": {
      "delete": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Delete a card associated to the provided account via its reference token",
        "description": "",
        "operationId": "deleteCard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "name": "cardReferenceToken",
            "in": "path",
            "description": "Reference token of the card to be retrieved",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Card deleted"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/templates/{templateId}": {
      "get": {
        "tags": [
          "DepositAccountDocuments"
        ],
        "summary": "Allows retrieval of a deposit account document (populated template) by provided deposit account id and template id",
        "description": "",
        "operationId": "getDepositAccountDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "The id of the deposit product template",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The first date to consider when the document contains a list of transactions. Required when document contains a transaction history.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The last date to consider when the document contains a list of transactions. Required when document contains a transaction history.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit account document retrieved",
            "responseSchema": {
              "type": "string"
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account or template not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/cards": {
      "get": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows retrieval of all cards associated with the account",
        "description": "",
        "operationId": "getAllCards",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account cards list retrieved",
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Create and associate a new card to the provided account",
        "description": "",
        "operationId": "createCard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Card to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Card was created"
          },
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}:startMaturity": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Starts the maturity period for the specified deposit account",
        "description": "",
        "operationId": "startMaturity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Allows specifying the details for an action to start the maturity period for a deposit account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartMaturityAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Start maturity action posted",
            "responseSchema": {
              "$ref": "#/definitions/DepositAccount"
            },
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          },
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/authorizationholds": {
      "get": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Retrieves authorization holds related to a deposit account, ordered from newest to oldest by creation date",
        "description": "",
        "operationId": "getAllAuthorizationHolds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination, index to start searching at when retrieving elements, used in combination with limit to paginate results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination, the number of elements to retrieve, used in combination with offset to paginate results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paginationDetails",
            "in": "query",
            "description": "Flag specifying whether the pagination  details should be provided in response headers. Please note that by default it is disabled (OFF), in order to improve the performance of the APIs",
            "required": false,
            "type": "string",
            "default": "OFF",
            "enum": [
              "ON",
              "OFF"
            ]
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the authorization holds to filter on",
            "required": false,
            "type": "string",
            "enum": [
              "PENDING",
              "REVERSED",
              "SETTLED",
              "EXPIRED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The list of authorization holds retrieved",
            "headers": {
              "Items-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the requested page size"
              },
              "Items-Offset": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the index of the first returned item"
              },
              "Items-Total": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the total available items"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetAuthorizationHold"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetAuthorizationHold"
              }
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/funding": {
      "get": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows retrieval of all loan accounts that are funded by the deposit account with the given id or encoded key.",
        "description": "",
        "operationId": "getFundedLoans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Funded loan accounts retrieved",
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoanAccount"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoanAccount"
              }
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits": {
      "get": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows retrieval of deposit accounts using various query parameters. It's possible to look up deposits by their state, branch, centre or by a credit officer to which the deposits are assigned.",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination, index to start searching at when retrieving elements, used in combination with limit to paginate results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination, the number of elements to retrieve, used in combination with offset to paginate results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paginationDetails",
            "in": "query",
            "description": "Flag specifying whether the pagination  details should be provided in response headers. Please note that by default it is disabled (OFF), in order to improve the performance of the APIs",
            "required": false,
            "type": "string",
            "default": "OFF",
            "enum": [
              "ON",
              "OFF"
            ]
          },
          {
            "name": "detailsLevel",
            "in": "query",
            "description": "The level of details to retrieve, FULL means the full details of the object will be retrieved (custom fields, address, contact info or any other related object), BASIC will return only the first level elements of the object",
            "required": false,
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ]
          },
          {
            "name": "creditOfficerUsername",
            "in": "query",
            "description": "The username of the credit officer to whom the deposit accounts are assigned to",
            "required": false,
            "type": "string"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "The id/encodedKey of the branch to which the deposit accounts are assigned to",
            "required": false,
            "type": "string"
          },
          {
            "name": "centreId",
            "in": "query",
            "description": "The id/encodedKey of the centre to which the deposit accounts are assigned to",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountState",
            "in": "query",
            "description": "The state of the deposit accounts to filter on",
            "required": false,
            "type": "string",
            "enum": [
              "PENDING_APPROVAL",
              "APPROVED",
              "ACTIVE",
              "ACTIVE_IN_ARREARS",
              "MATURED",
              "LOCKED",
              "DORMANT",
              "CLOSED",
              "CLOSED_WRITTEN_OFF",
              "WITHDRAWN",
              "CLOSED_REJECTED"
            ]
          },
          {
            "name": "accountHolderType",
            "in": "query",
            "description": "The type of the account holder: CLIENT/GROUP",
            "required": false,
            "type": "string",
            "enum": [
              "CLIENT",
              "GROUP"
            ]
          },
          {
            "name": "accountHolderId",
            "in": "query",
            "description": "The id of the account holder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit accounts list retrieved",
            "headers": {
              "Items-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the requested page size"
              },
              "Items-Offset": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the index of the first returned item"
              },
              "Items-Total": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the total available items"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DepositAccount"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DepositAccount"
              }
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Creates a new deposit account",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Deposit account to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Deposit account created",
            "responseSchema": {
              "$ref": "#/definitions/DepositAccount"
            },
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          },
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}:applyInterest": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Apply accrued interest",
        "description": "",
        "operationId": "applyInterest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit to which the interest will be applied",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Input details for apply accrued interest action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplyInterestInput"
            }
          }
        ],
        "responses": {
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "204": {
            "description": "Interest applied"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}:reopen": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Reopen a deposit account",
        "description": "",
        "operationId": "reopen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit to which the reopen action will be applied",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Input details for reopen action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReopenDepositAction"
            }
          }
        ],
        "responses": {
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "200": {
            "description": "Deposit account reopened",
            "responseSchema": {
              "$ref": "#/definitions/DepositAccount"
            },
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}:undoMaturity": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Undo the maturity period for the specified deposit account",
        "description": "",
        "operationId": "undoMaturity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "204": {
            "description": "Undo maturity action posted"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}:changeInterestRate": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows to change the interest rate for a deposit account",
        "description": "",
        "operationId": "changeInterestRate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Input details for the action of changing the interest rate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeInterestRateAction"
            }
          }
        ],
        "responses": {
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "204": {
            "description": "Interest rate change has been applied to this deposit account"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}:changeState": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows posting an action such as approve deposit account",
        "description": "",
        "operationId": "changeState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Allows specifying the action details for a deposit account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepositAccountAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit account action posted",
            "responseSchema": {
              "$ref": "#/definitions/DepositAccount"
            },
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          },
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/blocks/{externalReferenceId}": {
      "delete": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows to unblock a previously blocked fund for a deposit account",
        "description": "",
        "operationId": "unblockFund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "name": "externalReferenceId",
            "in": "path",
            "description": "The external reference ID of the transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Block fund removed"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Block fund not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}": {
      "get": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows retrieval of a single deposit account via id or encoded key",
        "description": "",
        "operationId": "getById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "name": "detailsLevel",
            "in": "query",
            "description": "The level of details to retrieve, FULL means the full details of the object will be retrieved (custom fields, address, contact info or any other related object), BASIC will return only the first level elements of the object",
            "required": false,
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit account retrieved",
            "responseSchema": {
              "$ref": "#/definitions/DepositAccount"
            },
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "put": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Update an existing deposit account",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deposit account updated",
            "responseSchema": {
              "$ref": "#/definitions/DepositAccount"
            },
            "schema": {
              "$ref": "#/definitions/DepositAccount"
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Delete an inactive deposit account via id or encoded key",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deposit account deleted"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "patch": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Partially update a deposit account",
        "description": "",
        "operationId": "patch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Patch operations to be applied to a resource",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PatchOperation"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deposit account updated"
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/blocks": {
      "get": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows retrieval of all block funds for a deposit account",
        "description": "",
        "operationId": "getAllBlocks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Block funds retrieved",
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlockFund"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlockFund"
              }
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Create a block fund for the provided account",
        "description": "",
        "operationId": "createBlockFund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Key that can be used to support idempotency on this POST. Must be a valid UUID(version 4 is recommended) string and can only be used with the exact same request. Can be used in retry mechanisms to prevent double posting.",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Block fund to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockFund"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Block fund was created",
            "responseSchema": {
              "$ref": "#/definitions/BlockFund"
            },
            "schema": {
              "$ref": "#/definitions/BlockFund"
            }
          },
          "102": {
            "description": "Your idempotent request was already submitted and is currently being processed, try again later."
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Deposit account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits:search": {
      "post": {
        "tags": [
          "DepositAccounts"
        ],
        "summary": "Allows retrieval of deposit accounts using search parameters.",
        "description": "",
        "operationId": "search",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination, index to start searching at when retrieving elements, used in combination with limit to paginate results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Pagination, the number of elements to retrieve, used in combination with offset to paginate results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paginationDetails",
            "in": "query",
            "description": "Flag specifying whether the pagination  details should be provided in response headers. Please note that by default it is disabled (OFF), in order to improve the performance of the APIs",
            "required": false,
            "type": "string",
            "default": "OFF",
            "enum": [
              "ON",
              "OFF"
            ]
          },
          {
            "name": "detailsLevel",
            "in": "query",
            "description": "The level of details to retrieve, FULL means the full details of the object will be retrieved (custom fields, address, contact info or any other related object), BASIC will return only the first level elements of the object",
            "required": false,
            "type": "string",
            "enum": [
              "BASIC",
              "FULL"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "description": "Criteria to be used to search the deposit accounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DepositAccountSearchCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result of deposit account search",
            "headers": {
              "Items-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the requested page size"
              },
              "Items-Offset": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the index of the first returned item"
              },
              "Items-Total": {
                "type": "integer",
                "format": "int32",
                "description": "Pagination details, the total available items"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DepositAccount"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DepositAccount"
              }
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/deposits/{depositAccountId}/funding/{loanAccountId}/schedule": {
      "get": {
        "tags": [
          "FundedLoanAccounts"
        ],
        "summary": "Allows retrieval of the loan account schedule for a loan account with the given id or encodedKey and funded by the deposit account with the given id or encodedKey.",
        "description": "",
        "operationId": "getScheduleForFundedAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.mambu.v2+json"
        ],
        "parameters": [
          {
            "name": "depositAccountId",
            "in": "path",
            "description": "The id or encoded key of the deposit account",
            "required": true,
            "type": "string"
          },
          {
            "name": "loanAccountId",
            "in": "path",
            "description": "The id or encoded key of the loan account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Funded Loan Account schedule retrieved",
            "responseSchema": {
              "$ref": "#/definitions/LoanAccountSchedule"
            },
            "schema": {
              "$ref": "#/definitions/LoanAccountSchedule"
            }
          },
          "400": {
            "description": "A Validation error occurred",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UNAUTHORIZED",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Loan Account or Deposit Account not found",
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "description": "",
      "type": "basic"
    }
  },
  "definitions": {
    "DepositAccountAction": {
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "description": "The action type to be applied",
          "enum": [
            "APPROVE",
            "UNDO_APPROVE",
            "LOCK",
            "UNLOCK",
            "CLOSE",
            "CLOSE_WITHDRAW",
            "CLOSE_REJECT",
            "CLOSE_WRITE_OFF"
          ]
        },
        "notes": {
          "type": "string",
          "description": "The notes related to the action performed"
        }
      },
      "description": "Allows specifying the action details for a deposit account"
    },
    "MonthAndDay": {
      "type": "object",
      "properties": {
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "The month of the year"
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "The day in the month"
        }
      },
      "description": "Wrapper for month and day for instances where the year isn't needed"
    },
    "LoanAccount": {
      "type": "object",
      "required": [
        "accountHolderKey",
        "accountHolderType",
        "loanAmount",
        "productTypeKey",
        "scheduleSettings"
      ],
      "properties": {
        "accountState": {
          "type": "string",
          "description": "The state of the loan account",
          "enum": [
            "PARTIAL_APPLICATION",
            "PENDING_APPROVAL",
            "APPROVED",
            "ACTIVE",
            "ACTIVE_IN_ARREARS",
            "CLOSED"
          ]
        },
        "prepaymentSettings": {
          "description": "The prepayment settings details of the loan.",
          "$ref": "#/definitions/PrepaymentSettings"
        },
        "migrationEventKey": {
          "type": "string",
          "description": "The migration event encoded key associated with this loan account. If this account was imported, track which 'migration event' they came from."
        },
        "lastSetToArrearsDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "Date when the loan account was set to last standing, or null if never set (as Organization Time)"
        },
        "notes": {
          "type": "string",
          "description": "Extra notes about this loan account."
        },
        "disbursementDetails": {
          "description": "Details regarding the disbursement",
          "$ref": "#/definitions/DisbursementDetails"
        },
        "redrawSettings": {
          "description": "The redraw settings, holds information about redraw.",
          "$ref": "#/definitions/LoanAccountRedrawSettings"
        },
        "daysInArrears": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days in arrears",
          "readOnly": true
        },
        "accountSubState": {
          "type": "string",
          "description": "This field holds a second state for the account. Beside the account state, we might need to hold sometimes a different information to actually represent the correct life-cycle step in which the account is at that moment. The account behaves as the main state implies, but it  can have either some limitations either some extra behavior rules. For example, even if the account is Active, it can also be Locked in the same time which impliessome limitations over the actions which can be performed with the account.",
          "enum": [
            "PARTIALLY_DISBURSED",
            "LOCKED",
            "LOCKED_CAPPING",
            "REFINANCED",
            "RESCHEDULED",
            "WITHDRAWN",
            "REPAID",
            "REJECTED",
            "WRITTEN_OFF",
            "TERMINATED"
          ]
        },
        "loanName": {
          "type": "string",
          "description": "The name of the loan account."
        },
        "terminationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this loan account was terminated"
        },
        "interestSettings": {
          "description": "The interest settings details for this loan.",
          "$ref": "#/definitions/InterestSettings"
        },
        "assets": {
          "type": "array",
          "description": "A list of assets associated with the current loan account",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "lastInterestReviewDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The last interest review date. Indicates the date the interest was reviewed last time. Stored as Organization Time."
        },
        "id": {
          "type": "string",
          "description": "The id of the loan, can be generated and customized, unique"
        },
        "assignedUserKey": {
          "type": "string",
          "description": "Key of the user this loan is assigned to"
        },
        "futurePaymentsAcceptance": {
          "type": "string",
          "description": "Shows whether the future payments are allowed or not for this account (repayment transactions with entry date set in the future)",
          "enum": [
            "NO_FUTURE_PAYMENTS",
            "ACCEPT_FUTURE_PAYMENTS",
            "ACCEPT_OVERPAYMENTS"
          ]
        },
        "originalAccountKey": {
          "type": "string",
          "description": "Key of the original rescheduled/refinanced account"
        },
        "lockedOperations": {
          "type": "array",
          "description": "A list with operations which are locked when the account is in sub-state AccountState.LOCKED.",
          "items": {
            "type": "string",
            "enum": [
              "APPLY_INTEREST",
              "APPLY_FEES",
              "APPLY_PENALTIES"
            ]
          }
        },
        "accruedInterest": {
          "type": "number",
          "description": "The accrued interest. Represents the amount of interest that has been accrued in the account."
        },
        "accruedPenalty": {
          "type": "number",
          "description": "The accrued penalty, represents the amount of penalty that has been accrued in the account."
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this loan account was created"
        },
        "assignedCentreKey": {
          "type": "string",
          "description": "Key of the centre this account is assigned to"
        },
        "tranches": {
          "type": "array",
          "description": "A list of disbursement tranches available for the current loan account.",
          "items": {
            "$ref": "#/definitions/LoanTranche"
          }
        },
        "approvedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this loan account was approved"
        },
        "taxRate": {
          "type": "number",
          "description": "The tax rate."
        },
        "lastTaxRateReviewDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The last tax rate review date. Indicates When/if the account had last tax rate checked (as Organization Time)."
        },
        "interestFromArrearsAccrued": {
          "type": "number",
          "description": "The interest from arrears accrued. Represents the amount of interest from arrears that has been accrued in the account.",
          "readOnly": true
        },
        "scheduleSettings": {
          "description": "The schedule settings details for this loan.",
          "$ref": "#/definitions/ScheduleSettings"
        },
        "daysLate": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days late",
          "readOnly": true
        },
        "paymentMethod": {
          "type": "string",
          "description": " The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)",
          "enum": [
            "HORIZONTAL",
            "VERTICAL"
          ]
        },
        "accountHolderKey": {
          "type": "string",
          "description": "The encodedKey of the client (a.k.a account holder)"
        },
        "latePaymentsRecalculationMethod": {
          "type": "string",
          "description": "Overdue payments recalculation method copied from the loan product on which this account is based",
          "enum": [
            "OVERDUE_INSTALLMENTS_INCREASE",
            "LAST_INSTALLMENT_INCREASE"
          ]
        },
        "fundingSources": {
          "type": "array",
          "description": "A list of funds associated with the current loan account",
          "items": {
            "$ref": "#/definitions/InvestorFund"
          }
        },
        "accountHolderType": {
          "type": "string",
          "description": "The type of the account holder (i.e CLIENT)",
          "enum": [
            "CLIENT",
            "GROUP"
          ]
        },
        "arrearsTolerancePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The arrears tolerance (period or day of month) depending on the product settings"
        },
        "lastInterestAppliedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The last interest applied date. Indicates when/if the account had last interest applied (stored to interest balance) (as Organization Time)"
        },
        "rescheduledAccountKey": {
          "type": "string",
          "description": "Key pointing to where this account was rescheduled/refinanced to. only not null if rescheduled"
        },
        "paymentHolidaysAccruedInterest": {
          "type": "number",
          "description": "The Payment Holidays interest accrued. Represents the amount of interest that has been accrued during Payment Holidays in the account."
        },
        "activationTransactionKey": {
          "type": "string",
          "description": "The encoded key of the transaction that activated this account"
        },
        "assignedBranchKey": {
          "type": "string",
          "description": "Key of the branch this loan account is assigned to. Loan account's branch is set to unassigned if no branch field is set"
        },
        "balances": {
          "description": "Balances details for this loan account",
          "readOnly": true,
          "$ref": "#/definitions/Balances"
        },
        "creditArrangementKey": {
          "type": "string",
          "description": "The key to the line of credit where this account is registered to."
        },
        "interestCommission": {
          "type": "number",
          "description": "The value of the interest booked by the organization from the accounts funded by investors. Null if the funds are not enable"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the loan account, auto generated, unique",
          "readOnly": true
        },
        "currency": {
          "description": "The currency in which the amounts are expressed for this account.",
          "readOnly": true,
          "$ref": "#/definitions/Currency"
        },
        "lastAccountAppraisalDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "When/if the account had last been evaluated for interest, principal, fees and penalties calculations (as Organization Time)"
        },
        "penaltySettings": {
          "description": "The penalty settings details of the loan.",
          "$ref": "#/definitions/PenaltySettings"
        },
        "settlementAccountKey": {
          "type": "string",
          "description": "The encodedKey of the settlement account"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The last date the loan was updated"
        },
        "principalPaymentSettings": {
          "description": "Defines the settings for Revolving Credit principal payments",
          "$ref": "#/definitions/PrincipalPaymentAccountSettings"
        },
        "lastLockedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "Holds the date when the account was set for the last time in the LOCKED state. If null, the account is not locked anymore. Stored as Organization Time"
        },
        "loanAmount": {
          "type": "number",
          "description": "The loan amount"
        },
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this loan was closed"
        },
        "productTypeKey": {
          "type": "string",
          "description": "The key to the type of product that this account is based on."
        },
        "allowOffset": {
          "type": "boolean",
          "description": "DEPRECATED - Will always be false."
        },
        "guarantors": {
          "type": "array",
          "description": "A list of guarantees associated with the current loan account",
          "items": {
            "$ref": "#/definitions/Guarantor"
          }
        },
        "accountArrearsSettings": {
          "description": "Defines the account's arrears settings",
          "$ref": "#/definitions/AccountArrearsSettings"
        }
      },
      "description": "Represents the amount that your organization lends to a customer. An account associated to a borrower with terms and conditions defined by a loan product. In a loan account Mambu stores all the information related to disbursements, repayments, interest rates and withdrawals."
    },
    "AccountArrearsSettings": {
      "type": "object",
      "properties": {
        "monthlyToleranceDay": {
          "type": "integer",
          "format": "int32",
          "description": "Defines monthly arrears tolerance day value."
        },
        "toleranceFloorAmount": {
          "type": "number",
          "description": "The tolerance floor amount."
        },
        "nonWorkingDaysMethod": {
          "type": "string",
          "description": "Shows whether the non working days are taken in consideration or not when applying penaltees/late fees or when setting an account into arrears",
          "enum": [
            "INCLUDED",
            "EXCLUDED"
          ]
        },
        "tolerancePercentageOfOutstandingPrincipal": {
          "type": "number",
          "description": "Defines the arrears tolerance amount."
        },
        "tolerancePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Defines the arrears tolerance period value."
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the arrears base settings, auto generated, unique.",
          "readOnly": true
        },
        "toleranceCalculationMethod": {
          "type": "string",
          "description": "Defines the tolerance calculation method",
          "enum": [
            "ARREARS_TOLERANCE_PERIOD",
            "MONTHLY_ARREARS_TOLERANCE_DAY"
          ]
        },
        "dateCalculationMethod": {
          "type": "string",
          "description": "The arrears date calculation method.",
          "enum": [
            "ACCOUNT_FIRST_WENT_TO_ARREARS",
            "LAST_LATE_REPAYMENT",
            "ACCOUNT_FIRST_BREACHED_MATERIALITY_THRESHOLD"
          ]
        }
      },
      "description": "The account arrears settings, holds the required information for the arrears settings of an account."
    },
    "DepositAffectedAmounts": {
      "type": "object",
      "properties": {
        "feesAmount": {
          "type": "number",
          "description": "Amount of fees involved in a transaction that affects an account with positive balance"
        },
        "overdraftInterestAmount": {
          "type": "number",
          "description": "Interest amount involved in a transaction that affects an overdraft"
        },
        "overdraftFeesAmount": {
          "type": "number",
          "description": "Fees amount involved in a transaction that affects an overdraft"
        },
        "fractionAmount": {
          "type": "number",
          "description": "In the case of an LOAN_FRACTION_BOUGHT this represent the fraction amount which was bought from another investor"
        },
        "technicalOverdraftAmount": {
          "type": "number",
          "description": "The amount of money that was added/subtracted from the account by this transaction as technical overdraft"
        },
        "overdraftAmount": {
          "type": "number",
          "description": "The amount of money that was added/subtracted from the account by this transaction as overdraft"
        },
        "interestAmount": {
          "type": "number",
          "description": "Amount of interest involved in a transaction that affects an account with positive balance"
        },
        "technicalOverdraftInterestAmount": {
          "type": "number",
          "description": "The amount of money that was added/subtracted from the account by this transaction as technical overdraft interest"
        },
        "fundsAmount": {
          "type": "number",
          "description": "Balance change amount involved in a transaction that affects an account with positive balance"
        }
      },
      "description": "The amounts affected after completing the deposit transaction"
    },
    "PenaltySettings": {
      "type": "object",
      "properties": {
        "loanPenaltyCalculationMethod": {
          "type": "string",
          "description": "The last penalty calculation method, represents on what amount are the penalties calculated.",
          "enum": [
            "NONE",
            "OVERDUE_BALANCE",
            "OVERDUE_BALANCE_AND_INTEREST",
            "OUTSTANDING_PRINCIPAL"
          ]
        },
        "penaltyRate": {
          "type": "number",
          "description": "The penalty rate, represents the rate (in percent) which is charged as a penalty."
        }
      },
      "description": "The penalty settings, holds all the fields regarding penalties"
    },
    "DepositOverdraftInterestSettings": {
      "type": "object",
      "properties": {
        "interestRate": {
          "type": "number",
          "description": "The interest rate that was set or changed in this transaction. Used on product interest rate changes or interest tier switches"
        },
        "indexInterestRate": {
          "type": "number",
          "description": "The value of the index interest rate set or changed in this transaction"
        }
      },
      "description": "Holds the deposit overdraft interest settings"
    },
    "InvestorFund": {
      "type": "object",
      "required": [
        "amount",
        "guarantorKey",
        "guarantorType"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "description": "The amount used by the client for the guaranty"
        },
        "interestCommission": {
          "type": "number",
          "description": "The constraint minimum value"
        },
        "depositAccountKey": {
          "type": "string",
          "description": "The key of the deposit account used by the guarantor (populated when the guaranty type is GUARANTOR). It can be null."
        },
        "assetName": {
          "type": "string",
          "description": "The name of a value the client guarantees with (populated when the guaranty type is ASSET)"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the entity, generated, globally unique",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Investor fund unique identifier. All versions of an investor fund will have same id."
        },
        "guarantorKey": {
          "type": "string",
          "description": "The key of the client/group used as the guarantor."
        },
        "guarantorType": {
          "type": "string",
          "description": "The type of the guarantor (client/group)",
          "enum": [
            "CLIENT",
            "GROUP"
          ]
        },
        "sharePercentage": {
          "type": "number",
          "description": "Percentage of loan shares this investor owns"
        }
      },
      "description": "Contains the details about an investor fund including fields like encoded key, guarantor type, amount and guarantor key"
    },
    "DepositAccountOverdraftInterestSettings": {
      "type": "object",
      "properties": {
        "interestRateSettings": {
          "description": "Overdraft interest rate settings for deposit accounts",
          "$ref": "#/definitions/DepositAccountOverdraftInterestRateSettings"
        }
      },
      "description": "Groups all fields related to a deposit account's overdraft interest settings"
    },
    "ReopenDepositAction": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "string",
          "description": "Additional information for this action"
        }
      },
      "description": "Reopen a deposit account"
    },
    "CreditorReferenceInformation": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "description": "The reference information of the creditor's underlying documents"
        },
        "referenceType": {
          "type": "string",
          "description": "The type of creditor reference"
        },
        "referenceIssuer": {
          "type": "string",
          "description": "The entity that assigns the reference type"
        }
      },
      "description": "Represents the reference to the underlying documents of the payment."
    },
    "Currency": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code of the currency.",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTC",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "STD",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XCD",
            "XOF",
            "XPF",
            "YER",
            "ZAR",
            "ZMK",
            "ZWL",
            "ZMW",
            "SSP"
          ]
        }
      },
      "description": "Represents a currency eg. USD, EUR."
    },
    "Guarantor": {
      "type": "object",
      "required": [
        "amount",
        "guarantorKey",
        "guarantorType"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "description": "The amount used by the client for the guaranty"
        },
        "depositAccountKey": {
          "type": "string",
          "description": "The key of the deposit account used by the guarantor (populated when the guaranty type is GUARANTOR). It can be null."
        },
        "assetName": {
          "type": "string",
          "description": "The name of a value the client guarantees with (populated when the guaranty type is ASSET)"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the security, auto generated, unique.",
          "readOnly": true
        },
        "guarantorKey": {
          "type": "string",
          "description": "The key of the client/group used as the guarantor."
        },
        "guarantorType": {
          "type": "string",
          "description": "The type of the guarantor (client/group)",
          "enum": [
            "CLIENT",
            "GROUP"
          ]
        }
      },
      "description": "Guarantor, holds information about a client guaranty entry. It can be defined based on another client which guarantees (including or not a savings account whether it is a client of the organization using Mambu or not) or based on a value the client holds (an asset)"
    },
    "DepositAccountInterestRateSettings": {
      "type": "object",
      "properties": {
        "interestRate": {
          "type": "number",
          "description": "The interest rate for the deposit account"
        },
        "interestRateTiers": {
          "type": "array",
          "description": "The list of interest rate tiers. An interest rate tier holds the values to define how the interest is computed",
          "items": {
            "$ref": "#/definitions/DepositAccountInterestRateTier"
          }
        },
        "interestChargeFrequency": {
          "type": "string",
          "description": "The interest change frequency. Holds the possible values for how often is interest charged on loan or deposit accounts",
          "enum": [
            "ANNUALIZED",
            "EVERY_MONTH",
            "EVERY_FOUR_WEEKS",
            "EVERY_WEEK",
            "EVERY_DAY",
            "EVERY_X_DAYS"
          ]
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded for this set of interest settings, auto generated, unique",
          "readOnly": true
        },
        "interestChargeFrequencyCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of units to apply over the interval (e.g. [x] weeks)"
        },
        "interestRateTerms": {
          "type": "string",
          "description": "How is the interest rate determined when being accrued for an account",
          "enum": [
            "FIXED",
            "TIERED",
            "TIERED_PERIOD",
            "TIERED_BAND"
          ]
        }
      },
      "description": "Interest rate settings for deposit accounts"
    },
    "Asset": {
      "type": "object",
      "required": [
        "amount",
        "assetName"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "description": "The amount used by the client for the guaranty"
        },
        "depositAccountKey": {
          "type": "string",
          "description": "The key of the deposit account used by the guarantor (populated when the guaranty type is GUARANTOR). It can be null."
        },
        "assetName": {
          "type": "string",
          "description": "The name of a value the client guarantees with (populated when the guaranty type is ASSET)"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the security, auto generated, unique.",
          "readOnly": true
        },
        "guarantorKey": {
          "type": "string",
          "description": "The key of the client/group used as the guarantor."
        },
        "guarantorType": {
          "type": "string",
          "description": "The type of the guarantor (client/group)",
          "enum": [
            "CLIENT",
            "GROUP"
          ]
        }
      },
      "description": "Asset, holds information about a client asset entry."
    },
    "LoanAccountRedrawSettings": {
      "type": "object",
      "required": [
        "restrictNextDueWithdrawal"
      ],
      "properties": {
        "restrictNextDueWithdrawal": {
          "type": "boolean",
          "description": "Indicates whether withdrawing amounts that reduce the next due instalment repayment is restricted or not"
        }
      },
      "description": "The redraw settings for a loan account."
    },
    "PatchOperationsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatchOperation"
      }
    },
    "AccountDetails": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The currency of the account"
        },
        "identification": {
          "description": "The account identification details for the transaction",
          "$ref": "#/definitions/AccountIdentification"
        }
      },
      "description": "The account currency and identification"
    },
    "Agent": {
      "type": "object",
      "properties": {
        "financialInstitutionIdentification": {
          "description": "The identification of the financial institution servicing an account",
          "$ref": "#/definitions/FinancialInstitutionIdentification"
        }
      },
      "description": "The agent details for a party"
    },
    "DepositTransaction": {
      "type": "object",
      "properties": {
        "migrationEventKey": {
          "type": "string",
          "description": "The migration event encoded key associated with this deposit account. If this account was imported, track which 'migration event' they came from"
        },
        "transactionDetails": {
          "description": "Holds the transaction details",
          "$ref": "#/definitions/TransactionDetails"
        },
        "fees": {
          "type": "array",
          "description": "All the amounts that have been applied or paid within this transaction and involved predefined fees",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Fee"
          }
        },
        "notes": {
          "type": "string",
          "description": "Extra notes about this deposit transaction"
        },
        "affectedAmounts": {
          "description": "The amounts affected after completing the transaction",
          "$ref": "#/definitions/DepositAffectedAmounts"
        },
        "cardTransaction": {
          "description": "The card transaction details that correspond to this deposit transaction (if applicable)",
          "$ref": "#/definitions/CardTransaction"
        },
        "taxes": {
          "description": "The taxes applied on this transaction",
          "$ref": "#/definitions/DepositTaxes"
        },
        "tillKey": {
          "type": "string",
          "description": "The till key associated with this transaction"
        },
        "adjustmentTransactionKey": {
          "type": "string",
          "description": "The key of the deposit transaction where the adjustment for this transaction was made (if any adjustment was involved)"
        },
        "type": {
          "type": "string",
          "description": "The type of the deposit transaction",
          "enum": [
            "IMPORT",
            "WRITE_OFF",
            "WRITE_OFF_ADJUSTMENT",
            "DEPOSIT",
            "ADJUSTMENT",
            "WITHDRAWAL",
            "WITHDRAWAL_ADJUSTMENT",
            "CARD_TRANSACTION_REVERSAL",
            "CARD_TRANSACTION_REVERSAL_ADJUSTMENT",
            "TRANSFER",
            "TRANSFER_ADJUSTMENT",
            "FEE_APPLIED",
            "FEE_ADJUSTED",
            "FEES_DUE_REDUCED",
            "INTEREST_APPLIED",
            "INTEREST_APPLIED_ADJUSTMENT",
            "FEE_REDUCTION_ADJUSTMENT",
            "WITHHOLDING_TAX",
            "WITHHOLDING_TAX_ADJUSTMENT",
            "INTEREST_RATE_CHANGED",
            "OVERDRAFT_INTEREST_RATE_CHANGED",
            "OVERDRAFT_LIMIT_CHANGED",
            "BRANCH_CHANGED",
            "LOAN_FUNDED",
            "LOAN_FUNDED_ADJUSTMENT",
            "LOAN_REPAID",
            "LOAN_REPAID_ADJUSTMENT",
            "LOAN_FRACTION_BOUGHT",
            "LOAN_FRACTION_BOUGHT_ADJUSTMENT",
            "LOAN_FRACTION_SOLD",
            "LOAN_FRACTION_SOLD_ADJUSTMENT",
            "SEIZED_AMOUNT"
          ]
        },
        "branchKey": {
          "type": "string",
          "description": "The branch where the transaction was performed",
          "readOnly": true
        },
        "terms": {
          "description": "The terms of the deposit transaction",
          "$ref": "#/definitions/DepositTerms"
        },
        "transferDetails": {
          "description": "Holds the transfer details",
          "$ref": "#/definitions/TransferDetails"
        },
        "paymentOrderId": {
          "type": "string",
          "description": "The payment order id of the deposit transaction, customizable"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the deposit transaction, auto generated, unique",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The id of the deposit transaction, auto generated, unique"
        },
        "paymentDetails": {
          "description": "Holds the payment details",
          "$ref": "#/definitions/PaymentDetails"
        },
        "originalTransactionKey": {
          "type": "string",
          "description": "The encodedKey of the transaction that was adjusted as part of this one. Available only for adjustment transactions"
        },
        "amount": {
          "type": "number",
          "description": "How much was added/removed in account"
        },
        "centreKey": {
          "type": "string",
          "description": "The center where the transaction was performed",
          "readOnly": true
        },
        "externalId": {
          "type": "string",
          "description": "The external id of the deposit transaction, customizable, unique"
        },
        "valueDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "Date of the entry (eg date of repayment or disbursal, etc.) (as Organization Time)"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date when this deposit transaction was created",
          "readOnly": true
        },
        "userKey": {
          "type": "string",
          "description": "The person that performed the transaction"
        },
        "blockId": {
          "type": "string",
          "description": "The block fund id associated with the transaction"
        },
        "parentAccountKey": {
          "type": "string",
          "description": "The key of the parent deposit account"
        },
        "accountBalances": {
          "description": "The account balances changed within the transaction",
          "$ref": "#/definitions/DepositTransactionBalances"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date when corresponding JE is booked (as Organization Time)"
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency in which this transaction was posted"
        }
      },
      "description": "Represents the action performed on an Deposit Account after which the account's amount changes its value."
    },
    "DepositOverdraftSettings": {
      "type": "object",
      "properties": {
        "overdraftLimit": {
          "type": "number",
          "description": "The overdraft limit that was set or changed in this transaction"
        }
      },
      "description": "Holds the deposit overdraft settings for a transaction"
    },
    "StartMaturityAction": {
      "type": "object",
      "properties": {
        "maturityDate": {
          "type": "string",
          "format": "date",
          "example": "1987-04-26",
          "description": "The date at which the maturity period starts"
        },
        "notes": {
          "type": "string",
          "description": "The notes related to the action performed"
        }
      },
      "description": "The action to start the maturity period for a deposit account"
    },
    "ChangeInterestRateAction": {
      "type": "object",
      "required": [
        "interestRate",
        "valueDate"
      ],
      "properties": {
        "interestRate": {
          "type": "number",
          "description": "The new interest rate to be available on the account"
        },
        "valueDate": {
          "type": "string",
          "format": "date",
          "example": "1987-04-26",
          "description": "The date when to change the interest rate"
        },
        "notes": {
          "type": "string",
          "description": "The notes for the change interest rate action"
        }
      },
      "description": "Allows to change the interest rate for a deposit account"
    },
    "TransferDetails": {
      "type": "object",
      "properties": {
        "linkedLoanTransactionKey": {
          "type": "string",
          "description": "The key of the related loan transaction"
        },
        "linkedDepositTransactionKey": {
          "type": "string",
          "description": "The key of the related deposit transaction"
        }
      },
      "description": "Represents the transfer details, such as the linked transaction key"
    },
    "PaymentTypeInformation": {
      "type": "object",
      "properties": {
        "serviceLevel": {
          "description": "Agreement under which rules the transaction should be processed",
          "$ref": "#/definitions/ServiceLevel"
        }
      },
      "description": "The information specifying the type of transaction"
    },
    "DepositTerms": {
      "type": "object",
      "properties": {
        "interestSettings": {
          "description": "Groups all fields having interest purpose concerning a transaction",
          "$ref": "#/definitions/DepositTransactionInterestSettings"
        },
        "overdraftSettings": {
          "description": "Holds the deposit interest settings",
          "$ref": "#/definitions/DepositOverdraftSettings"
        },
        "overdraftInterestSettings": {
          "description": "Holds the deposit overdraft interest settings",
          "$ref": "#/definitions/DepositOverdraftInterestSettings"
        }
      },
      "description": "The deposit transaction terms"
    },
    "Balances": {
      "type": "object",
      "properties": {
        "interestFromArrearsPaid": {
          "type": "number",
          "description": "The interest from arrears paid, indicates total interest from arrears paid into the account.",
          "readOnly": true
        },
        "principalDue": {
          "type": "number",
          "description": "The principal due, indicates how much principal it's due at this moment.",
          "readOnly": true
        },
        "interestBalance": {
          "type": "number",
          "description": "The interest balance. Represents the total interest owned by the client, from now on (total interest accrued for account - interest paid).",
          "readOnly": true
        },
        "holdBalance": {
          "type": "number",
          "description": "The sum of all the authorization hold amounts on this account.",
          "readOnly": true
        },
        "principalPaid": {
          "type": "number",
          "description": "The principal paid, holds the value of the total paid into the account.",
          "readOnly": true
        },
        "penaltyDue": {
          "type": "number",
          "description": "The penalty due. Represents the total penalty amount due for the account.",
          "readOnly": true
        },
        "feesBalance": {
          "type": "number",
          "description": "The fees balance. Represents the total fees expected to be paid on this account at a given moment.",
          "readOnly": true
        },
        "penaltyBalance": {
          "type": "number",
          "description": "The penalty balance. Represents the total penalty expected to be paid on this account at a given moment.",
          "readOnly": true
        },
        "redrawBalance": {
          "type": "number",
          "description": "The total redraw amount owned by the client, from now on."
        },
        "interestFromArrearsBalance": {
          "type": "number",
          "description": "The interest from arrears balance. Indicates interest from arrears owned by the client, from now on. (total interest from arrears accrued for account - interest from arrears paid).",
          "readOnly": true
        },
        "principalBalance": {
          "type": "number",
          "description": "The total principal owned by the client, from now on (principal disbursed - principal paid).",
          "readOnly": true
        },
        "interestDue": {
          "type": "number",
          "description": "The interest due. Indicates how much interest it's due for the account at this moment.",
          "readOnly": true
        },
        "penaltyPaid": {
          "type": "number",
          "description": "The Penalty paid. Represents the total penalty amount paid for the account.",
          "readOnly": true
        },
        "feesPaid": {
          "type": "number",
          "description": "The fees paid. Represents the total fees paid for the account.",
          "readOnly": true
        },
        "interestFromArrearsDue": {
          "type": "number",
          "description": "The interest from arrears due. Indicates how much interest from arrears it's due for the account at this moment.",
          "readOnly": true
        },
        "feesDue": {
          "type": "number",
          "description": "The fees due. Representing the total fees due for the account.",
          "readOnly": true
        },
        "interestPaid": {
          "type": "number",
          "description": "The interest paid, indicates total interest paid into the account.",
          "readOnly": true
        }
      },
      "description": "The loan account balance details."
    },
    "Structured": {
      "type": "object",
      "properties": {
        "creditorReferenceInformation": {
          "description": "Information supplied to match the items of the payment in a structured form for the creditor",
          "$ref": "#/definitions/CreditorReferenceInformation"
        }
      },
      "description": "The information specifying the payment items that are intended to settle"
    },
    "DepositAccountInterestRateTier": {
      "type": "object",
      "required": [
        "interestRate"
      ],
      "properties": {
        "endingBalance": {
          "type": "number",
          "description": "The top-limit value for the account balance in order to determine if this tier is used or not"
        },
        "interestRate": {
          "type": "number",
          "description": "The rate used for computing the interest for an account which has the balance less than the ending balance"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the interest rate tier, auto generated, unique",
          "readOnly": true
        },
        "endingDay": {
          "type": "integer",
          "format": "int32",
          "description": "The top-limit value for the account period since activation in order to determine if this tier is used or not"
        }
      },
      "description": "Used or TIERED interest rates, holds the values to define how the interest is computed"
    },
    "OtherAccountIdentification": {
      "type": "object",
      "properties": {
        "scheme": {
          "type": "string",
          "description": "The identification scheme"
        },
        "identification": {
          "type": "string",
          "description": "The identification of the payer/payee"
        }
      },
      "description": "Represents other way of identification for the account."
    },
    "Card": {
      "type": "object",
      "required": [
        "referenceToken"
      ],
      "properties": {
        "referenceToken": {
          "type": "string",
          "description": "The reference token of the card"
        }
      },
      "description": "A card which can be associated to an account (deposit / loan). Cards consist only in card references (tokens). Card details are not stored by Mambu."
    },
    "TrancheDisbursementDetails": {
      "type": "object",
      "properties": {
        "expectedDisbursementDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date when this tranche is supposed to be disbursed (as Organization Time)"
        },
        "disbursementTransactionKey": {
          "type": "string",
          "description": "The key of the disbursement transaction logged when this tranche was disbursed. This field will be null until the tranche disbursement"
        }
      },
      "description": "The disbursement details regarding a loan tranche."
    },
    "CardTransaction": {
      "type": "object",
      "required": [
        "advice",
        "amount",
        "externalReferenceId"
      ],
      "properties": {
        "externalReferenceId": {
          "type": "string",
          "description": "The external reference ID to be used to reference the card transaction in subsequent requests."
        },
        "amount": {
          "type": "number",
          "description": "The amount of money to be withdrawn in the financial transaction."
        },
        "advice": {
          "type": "boolean",
          "description": "Whether the given request should be accepted without balance validations."
        },
        "externalAuthorizationReferenceId": {
          "type": "string",
          "description": "The external authorization hold reference ID, which relates this card transaction to a previous authorization hold."
        },
        "cardAcceptor": {
          "description": "The card acceptor details.",
          "$ref": "#/definitions/CardAcceptor"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the entity, generated, globally unique",
          "readOnly": true
        },
        "userTransactionTime": {
          "type": "string",
          "description": "The formatted time at which the user made this card transaction."
        },
        "currencyCode": {
          "type": "string",
          "description": "The ISO currency code in which the card reversal transaction is posted. The amounts are stored in the base currency, but the transaction can be created with a foreign currency."
        },
        "cardToken": {
          "type": "string",
          "description": "The reference token of the card.",
          "readOnly": true
        }
      },
      "description": "A card transaction entry which will have a corresponding a financial transaction performed."
    },
    "DepositAccountFilterCriteria": {
      "type": "object",
      "required": [
        "field",
        "operator"
      ],
      "properties": {
        "field": {
          "type": "string",
          "description": "Contains the actual searching fields that can be native (one from the provided list) or otherwise can specify a custom fieldusing the format [customFieldSetId].[customFieldId].\n",
          "enum": [
            "encodedKey",
            "id",
            "name",
            "accountHolderKey",
            "clientId",
            "groupId",
            "accountHolderName",
            "accountState",
            "accountType",
            "creationDate",
            "activationDate",
            "approvedDate",
            "lastModifiedDate",
            "maturityDate",
            "lastSetToArrearsDate",
            "closedDate",
            "accruedAmounts.interestAccrued",
            "accruedAmounts.overdraftInterestAccrued",
            "accruedAmounts.technicalOverdraftInterestAccrued",
            "maxBalance",
            "balances.availableBalance",
            "balances.blockedBalance",
            "balances.feesDue",
            "balances.lockedBalance",
            "balances.overdraftAmount",
            "balances.overdraftInterestDue",
            "balances.technicalOverdraftAmount",
            "balances.totalBalance",
            "balances.holdBalance",
            "assignedBranchKey",
            "assignedCentreKey",
            "assignedUserKey",
            "currencyCode",
            "interestSettings.interestRate",
            "currentInterestTier.endingBalance",
            "currentInterestTier.index",
            "currentInterestTier.interestRate",
            "currentInterestTier.startingBalance",
            "internalControls.maxWithdrawalAmount",
            "internalControls.recommendedDepositAmount",
            "internalControls.targetAmount",
            "lengthInDays",
            "overdraftRiskLevelKey",
            "overdraftAvailableLimit",
            "overdraftDaysInArrears",
            "overdraftInArrears",
            "overdraftInterestSettings.interestRateSettings.interestRate",
            "overdraftInterestSettings.interestRateSettings.interestSpread",
            "currentOverdraftInterestTier.endingBalance",
            "currentOverdraftInterestTier.index",
            "currentOverdraftInterestTier.interestRate",
            "currentOverdraftInterestTier.startingBalance",
            "overdraftSettings.overdraftExpiryDate",
            "overdraftSettings.overdraftLimit",
            "overdraftSettings.allowOverdraft",
            "productTypeKey",
            "productCategory",
            "taxApplied",
            "withholdingTaxSourceKey",
            "taxRate"
          ]
        },
        "value": {
          "type": "string",
          "description": "The value to match the searching criteria"
        },
        "operator": {
          "type": "string",
          "description": "| **Operator**                | **Affected values**  | **Available for**                                                    |\n|---------------               |----------------------|----------------------------------------------------------------------|\n| EQUALS                       | ONE_VALUE            | BIG_DECIMAL,BOOLEAN,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY        |\n| EQUALS_CASE_SENSITIVE        | ONE_VALUE            | BIG_DECIMAL,BOOLEAN,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY \t\t  |\n| MORE_THAN                    | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             |\n| LESS_THAN                    | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             |\n| BETWEEN                      | TWO_VALUES           | BIG_DECIMAL,NUMBER,MONEY,DATE,DATE_TIME                              |\n| ON                           | ONE_VALUE            | DATE,DATE_TIME                                                       |\n| AFTER                        | ONE_VALUE            | DATE,DATE_TIME                                                       |\n| BEFORE                       | ONE_VALUE            | DATE,DATE_TIME                                                       |\n| BEFORE_INCLUSIVE             | ONE_VALUE            | DATE,DATE_TIME                                                       |\n| STARTS_WITH                  | ONE_VALUE            | STRING                                                               |\n| STARTS_WITH_CASE_SENSITIVE   | ONE_VALUE            | STRING                                                               |\n| IN                           | LIST                 | ENUM,KEY                                                             |\n| TODAY                        | NO_VALUE             | DATE,DATE_TIME                                                       |\n| THIS_WEEK                    | NO_VALUE             | DATE,DATE_TIME                                                       |\n| THIS_MONTH                   | NO_VALUE             | DATE,DATE_TIME                                                       |\n| THIS_YEAR                    | NO_VALUE             | DATE,DATE_TIME                                                       |\n| LAST_DAYS                    | ONE_VALUE            | NUMBER                                                               |\n| EMPTY                        | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME |\n| NOT_EMPTY                    | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME |",
          "enum": [
            "EQUALS",
            "EQUALS_CASE_SENSITIVE",
            "DIFFERENT_THAN",
            "MORE_THAN",
            "LESS_THAN",
            "BETWEEN",
            "ON",
            "AFTER",
            "BEFORE",
            "BEFORE_INCLUSIVE",
            "STARTS_WITH",
            "STARTS_WITH_CASE_SENSITIVE",
            "IN",
            "TODAY",
            "THIS_WEEK",
            "THIS_MONTH",
            "THIS_YEAR",
            "LAST_DAYS",
            "EMPTY",
            "NOT_EMPTY"
          ]
        },
        "secondValue": {
          "type": "string",
          "description": "The second value to match the searching criteria, when using BETWEEN, together with value"
        },
        "values": {
          "type": "array",
          "description": "List of values when operator is IN.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The unit that composes the list used for deposit accounts client directed searching"
    },
    "RemittanceInformation": {
      "type": "object",
      "properties": {
        "structured": {
          "description": "Information supplied to match the items of the payment in a structured form",
          "$ref": "#/definitions/Structured"
        },
        "unstructured": {
          "type": "string",
          "description": "Information supplied to match the items of the payment in an unstructured form"
        }
      },
      "description": "The information specifying the payment items that are intended to settle"
    },
    "DepositTaxes": {
      "type": "object",
      "properties": {
        "taxRate": {
          "type": "number",
          "description": "The tax rate that was set or changed in this transaction"
        }
      },
      "description": "The taxes applied within a transaction"
    },
    "BillingCycleDays": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "description": "The billing cycle start days in case it is enabled",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "description": "Defines the billing cycles settings for a loan account"
    },
    "PaymentDetails": {
      "type": "object",
      "properties": {
        "paymentIdentification": {
          "description": "Identifiers of a payment instruction",
          "$ref": "#/definitions/PaymentIdentification"
        },
        "debtorAccount": {
          "description": "Includes the debtor account details like identification and currency",
          "$ref": "#/definitions/AccountDetails"
        },
        "debtor": {
          "description": "Includes the details of the party that owes an amount of money to the creditor",
          "$ref": "#/definitions/Party"
        },
        "debtorAgent": {
          "description": "Includes the details of the financial institution servicing an account for the debtor",
          "$ref": "#/definitions/Agent"
        },
        "creditorAgent": {
          "description": "Includes the details of the financial institution servicing an account for the creditor",
          "$ref": "#/definitions/Agent"
        },
        "remittanceInformation": {
          "description": "Information supplied to match the items of the payment",
          "$ref": "#/definitions/RemittanceInformation"
        },
        "creditorAccount": {
          "description": "Includes the creditor account details like identification and currency",
          "$ref": "#/definitions/AccountDetails"
        },
        "creditor": {
          "description": "Includes the details of the party to which an amount of money is due",
          "$ref": "#/definitions/Party"
        },
        "paymentTypeInformation": {
          "description": "The information specifying the type of transaction",
          "$ref": "#/definitions/PaymentTypeInformation"
        }
      },
      "description": "The payment information including account identification details"
    },
    "DepositAccountBalances": {
      "type": "object",
      "properties": {
        "overdraftInterestDue": {
          "type": "number",
          "description": "How much interest is due to be paid on this account as a result of the authorized overdraft",
          "readOnly": true
        },
        "forwardAvailableBalance": {
          "type": "number",
          "description": "The sum of all the authorization hold amounts that have CRDT as creditDebitIndicator from this account",
          "readOnly": true
        },
        "totalBalance": {
          "type": "number",
          "description": "The current balance of the account",
          "readOnly": true
        },
        "lockedBalance": {
          "type": "number",
          "description": "No operation can modify the balance of the account and get it lower than this locked balance",
          "readOnly": true
        },
        "technicalOverdraftAmount": {
          "type": "number",
          "description": "How much money has been taken out as unplanned overdraft",
          "readOnly": true
        },
        "overdraftAmount": {
          "type": "number",
          "description": "How much money has been taken out in overdraft",
          "readOnly": true
        },
        "holdBalance": {
          "type": "number",
          "description": "The sum of all the authorization hold amounts that have DBIT as creditDebitIndicator from this account",
          "readOnly": true
        },
        "technicalOverdraftInterestDue": {
          "type": "number",
          "description": "How much interest is due to be paid on this account as a result of the technical overdraft",
          "readOnly": true
        },
        "feesDue": {
          "type": "number",
          "description": "How much fees is due to be paid on this account",
          "readOnly": true
        },
        "blockedBalance": {
          "type": "number",
          "description": "The sum of all the blocked amounts on this account",
          "readOnly": true
        },
        "availableBalance": {
          "type": "number",
          "description": "The current available balance for deposit transactions",
          "readOnly": true
        }
      },
      "description": "Groups all fields related to a deposit account's balances"
    },
    "BlockFund": {
      "type": "object",
      "required": [
        "amount",
        "externalReferenceId"
      ],
      "properties": {
        "externalReferenceId": {
          "type": "string",
          "description": "The external reference ID to be used to reference the block fund in subsequent requests"
        },
        "amount": {
          "type": "number",
          "description": "The amount to be blocked"
        },
        "seizedAmount": {
          "type": "number",
          "description": "The amount that has been seized",
          "readOnly": true
        },
        "notes": {
          "type": "string",
          "description": "Notes about this block fund"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date at which the block fund was created",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "The state of the block fund",
          "readOnly": true,
          "enum": [
            "PENDING",
            "SEIZED",
            "REMOVED",
            "PARTIALLY_SEIZED"
          ]
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date at which the block fund was created",
          "readOnly": true
        },
        "accountKey": {
          "type": "string",
          "description": "The key of the account which block fund belongs to",
          "readOnly": true
        }
      },
      "description": "Blocks an amount on deposit account that can be later seized"
    },
    "DepositTransactionBalances": {
      "type": "object",
      "properties": {
        "totalBalance": {
          "type": "number",
          "description": "The running balance owed by deposit"
        }
      },
      "description": "The balances changed within a transaction."
    },
    "ServiceLevel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code for a pre-agreed service or level of service between the parties"
        }
      },
      "description": "The rules under which the transaction should be processed"
    },
    "CustomPredefinedFee": {
      "type": "object",
      "properties": {
        "predefinedFeeEncodedKey": {
          "type": "string",
          "description": "The encoded key of the predefined fee"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the custom predefined fee, auto generated, unique.",
          "readOnly": true
        },
        "amount": {
          "type": "number",
          "description": "The amount of the custom fee."
        }
      },
      "description": "The custom predefined fees, they may be used as the expected predefined fees that will be applied on the disbursement."
    },
    "CardAcceptor": {
      "type": "object",
      "properties": {
        "zip": {
          "type": "string",
          "description": "The ZIP code of the location in which the card acceptor has the business."
        },
        "country": {
          "type": "string",
          "description": "The country in which the card acceptor has the business."
        },
        "city": {
          "type": "string",
          "description": "The city in which the card acceptor has the business."
        },
        "street": {
          "type": "string",
          "description": "The street in which the card acceptor has the business."
        },
        "name": {
          "type": "string",
          "description": "The name of the card acceptor."
        },
        "state": {
          "type": "string",
          "description": "The state in which the card acceptor has the business."
        },
        "mcc": {
          "type": "integer",
          "format": "int32",
          "description": "The Merchant Category Code of the card acceptor."
        }
      },
      "description": "The details of the card acceptor (merchant) in a transaction hold."
    },
    "InterestSettings": {
      "type": "object",
      "properties": {
        "interestRateReviewUnit": {
          "type": "string",
          "description": "The interest rate review unit. Defines the interest rate update frequency measurement unit.",
          "enum": [
            "DAYS",
            "WEEKS",
            "MONTHS"
          ]
        },
        "interestRate": {
          "type": "number",
          "description": "The interest rate. Represents the interest rate for the loan account. The interest on loans is accrued on a daily basis, which allows charging the clients only for the days they actually used the loan amount."
        },
        "interestRateSource": {
          "type": "string",
          "description": "The interest rate source. Represents the interest calculation method: fixed or (interest spread + active organization index interest rate)",
          "enum": [
            "FIXED_INTEREST_RATE",
            "INDEX_INTEREST_RATE"
          ]
        },
        "interestApplicationMethod": {
          "type": "string",
          "description": "The interest application method. Represents the interest application method that determines whether the interest gets applied on the account's disbursement or on each repayment.",
          "enum": [
            "AFTER_DISBURSEMENT",
            "REPAYMENT_DUE_DATE"
          ]
        },
        "interestChargeFrequency": {
          "type": "string",
          "description": "The interest change frequency. Holds the possible values for how often is interest charged on loan or deposit accounts",
          "enum": [
            "ANNUALIZED",
            "EVERY_MONTH",
            "EVERY_FOUR_WEEKS",
            "EVERY_WEEK",
            "EVERY_DAY",
            "EVERY_X_DAYS"
          ]
        },
        "interestType": {
          "type": "string",
          "description": "The possible values for how we compute and apply the interest",
          "enum": [
            "SIMPLE_INTEREST",
            "CAPITALIZED_INTEREST",
            "COMPOUNDING_INTEREST"
          ]
        },
        "accrueInterestAfterMaturity": {
          "type": "boolean",
          "description": "The accrue interest after maturity. If the product support this option, specify if the interest should be accrued after the account maturity date."
        },
        "interestBalanceCalculationMethod": {
          "type": "string",
          "description": "The interest balance calculation method. Represents the option which determines the way the balance for the account's interest is computed.",
          "enum": [
            "ONLY_PRINCIPAL",
            "PRINCIPAL_AND_INTEREST"
          ]
        },
        "interestSpread": {
          "type": "number",
          "description": "Interest to be added to active organization index interest rate in order to find out actual interest rate"
        },
        "interestCalculationMethod": {
          "type": "string",
          "description": "The interest calculation method. Holds the type of interest calculation method.",
          "enum": [
            "FLAT",
            "DECLINING_BALANCE",
            "DECLINING_BALANCE_DISCOUNTED"
          ]
        },
        "interestRateReviewCount": {
          "type": "integer",
          "format": "int32",
          "description": "Interest rate update frequency unit count."
        },
        "accrueLateInterest": {
          "type": "boolean",
          "description": "Indicates whether late interest is accrued for this loan account",
          "readOnly": true
        }
      },
      "description": "The interest settings, holds all the properties regarding interests for the loan account."
    },
    "ScheduleSettings": {
      "type": "object",
      "required": [
        "gracePeriod"
      ],
      "properties": {
        "gracePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The grace period. Represents the grace period for loan repayment - in number of installments."
        },
        "periodicPayment": {
          "type": "number",
          "description": "The periodic payment amount for the accounts which have balloon payments or Reduce Number of Installments and Optimized Payments"
        },
        "repaymentScheduleMethod": {
          "type": "string",
          "description": "The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account's life cycle or will be dynamically recomputed when required.",
          "enum": [
            "NONE",
            "FIXED",
            "DYNAMIC"
          ]
        },
        "paymentPlan": {
          "type": "array",
          "description": "A list of periodic payments for the current loan account.",
          "items": {
            "$ref": "#/definitions/PeriodicPayment"
          }
        },
        "shortMonthHandlingMethod": {
          "type": "string",
          "description": "The short handling method. Determines how to handle the short months, if they select a fixed day of month > 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Repayment Methodology is FIXED_DAYS_OF_MONTH.",
          "enum": [
            "LAST_DAY_IN_MONTH",
            "FIRST_DAY_OF_NEXT_MONTH"
          ]
        },
        "repaymentInstallments": {
          "type": "integer",
          "format": "int32",
          "description": "The repayment installments. Represents how many installments are required to pay back the loan."
        },
        "gracePeriodType": {
          "type": "string",
          "description": "The grace period type. Representing the type of grace period which is possible for a loan account.",
          "enum": [
            "NONE",
            "PAY_INTEREST_ONLY",
            "INTEREST_FORGIVENESS"
          ]
        },
        "principalRepaymentInterval": {
          "type": "integer",
          "format": "int32",
          "description": "The principal repayment interval. Indicates the interval of repayments that the principal has to be paid."
        },
        "hasCustomSchedule": {
          "type": "boolean",
          "description": "Flag used when the repayments schedule for the current account was determined by the user, by editing the due dates or the principal due"
        },
        "repaymentPeriodUnit": {
          "type": "string",
          "description": "The repayment period unit. Represents the frequency of loan repayment.",
          "enum": [
            "DAYS",
            "WEEKS",
            "MONTHS",
            "YEARS"
          ]
        },
        "fixedDaysOfMonth": {
          "type": "array",
          "description": "Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is FIXED_DAYS_OF_MONTH.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "billingCycle": {
          "description": "The billing cycle start days.",
          "allowEmptyValue": true,
          "$ref": "#/definitions/BillingCycleDays"
        },
        "scheduleDueDatesMethod": {
          "type": "string",
          "description": "The schedule due dates method. Represents the methodology used by this account to compute the due dates of the repayments.",
          "enum": [
            "INTERVAL",
            "FIXED_DAYS_OF_MONTH"
          ]
        },
        "repaymentPeriodCount": {
          "type": "integer",
          "format": "int32",
          "description": "The repayment period count. Represents how often the loan is to be repaid: stored based on the type repayment option."
        },
        "defaultFirstRepaymentDueDateOffset": {
          "type": "integer",
          "format": "int32",
          "description": "The default first repayment due date offset, indicates how many days the first repayment due date should be extended(all other due dates from the schedule are relative to first repayment due date - they will also be affected by the offset)"
        }
      },
      "description": "The schedule settings, holds all schedule properties."
    },
    "AccountIdentification": {
      "type": "object",
      "properties": {
        "other": {
          "description": "Other means of identification for the account",
          "$ref": "#/definitions/OtherAccountIdentification"
        },
        "iban": {
          "type": "string",
          "description": "The account unique identifier"
        }
      },
      "description": "The account identification details"
    },
    "DepositAccountInterestPaymentSettings": {
      "type": "object",
      "properties": {
        "interestPaymentDates": {
          "type": "array",
          "description": "The list of all dates on which the interest is payed into deposit account",
          "items": {
            "$ref": "#/definitions/MonthAndDay"
          }
        },
        "interestPaymentPoint": {
          "type": "string",
          "description": "The interest payment point, specifies when the interest should be paid to the account",
          "enum": [
            "FIRST_DAY_OF_MONTH",
            "EVERY_WEEK",
            "EVERY_OTHER_WEEK",
            "EVERY_MONTH",
            "EVERY_3_MONTHS",
            "ON_FIXED_DATES",
            "DAILY",
            "ANNUALLY",
            "BI_ANNUALLY",
            "ON_ACCOUNT_MATURITY"
          ]
        }
      },
      "description": "Groups all fields related to a deposit account's interest payment settings"
    },
    "WithdrawalDepositTransactionInput": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "transactionDetails": {
          "description": "Holds the transaction details",
          "$ref": "#/definitions/TransactionDetailsInput"
        },
        "amount": {
          "type": "number",
          "description": "The amount to withdraw from account"
        },
        "notes": {
          "type": "string",
          "description": "Extra notes about this deposit transaction"
        },
        "paymentOrderId": {
          "type": "string",
          "description": "The payment order id of the withdrawal transaction, customizable"
        },
        "externalId": {
          "type": "string",
          "description": "The external id of the withdrawal transaction, customizable, unique"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date of the withdrawal when the transaction is logged into accounting. If not specified it is considered the value date"
        },
        "valueDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The entry date of the withdrawal. If not specified it is considered the current date (as Organization Time)"
        },
        "paymentDetails": {
          "description": "Contains the details of a payment",
          "$ref": "#/definitions/PaymentDetails"
        }
      },
      "description": "Represents the input for a withdrawal transaction."
    },
    "PeriodicPayment": {
      "type": "object",
      "required": [
        "amount",
        "toInstallment"
      ],
      "properties": {
        "toInstallment": {
          "type": "integer",
          "format": "int32",
          "description": "The installment's position up to which the PMT will be used"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the periodic payment, auto generated, unique.",
          "readOnly": true
        },
        "amount": {
          "type": "number",
          "description": "The PMT value used in periodic payment"
        }
      },
      "description": "For fixed term loans there is the possibility to define a payment plan. A payment plan consists of multiple periodic payments. This class holds information about a periodic payment."
    },
    "DepositAccountInterestSettings": {
      "type": "object",
      "properties": {
        "interestRateSettings": {
          "description": "Interest rate settings for deposit accounts",
          "$ref": "#/definitions/DepositAccountInterestRateSettings"
        },
        "interestPaymentSettings": {
          "description": "Interest payment settings for the account",
          "$ref": "#/definitions/DepositAccountInterestPaymentSettings"
        }
      },
      "description": "Groups all fields related to a deposit account's interest settings"
    },
    "PrincipalPaymentAccountSettings": {
      "type": "object",
      "properties": {
        "includeInterestInFloorAmount": {
          "type": "boolean",
          "description": "Boolean flag, if true, the interest will be included along with the principal in the repayment floor amount, for a revolving credit account"
        },
        "totalDuePayment": {
          "type": "string",
          "description": "The method of total due payment for revolving credit",
          "enum": [
            "FLAT",
            "OUTSTANDING_PRINCIPAL_PERCENTAGE",
            "PRINCIPAL_PERCENTAGE_LAST_DISB",
            "TOTAL_BALANCE_PERCENTAGE",
            "TOTAL_BALANCE_FLAT",
            "TOTAL_PRINCIPAL_PERCENTAGE"
          ]
        },
        "amount": {
          "type": "number",
          "description": "Fixed amount for being used for the repayments principal due."
        },
        "principalFloorValue": {
          "type": "number",
          "description": "The minimum principal due amount a repayment made with this settings can have"
        },
        "principalPaymentMethod": {
          "type": "string",
          "description": "The method of principal payment for revolving credit.",
          "enum": [
            "FLAT",
            "OUTSTANDING_PRINCIPAL_PERCENTAGE",
            "PRINCIPAL_PERCENTAGE_LAST_DISB",
            "TOTAL_BALANCE_PERCENTAGE",
            "TOTAL_BALANCE_FLAT",
            "TOTAL_PRINCIPAL_PERCENTAGE"
          ]
        },
        "percentage": {
          "type": "number",
          "description": "Percentage of principal amount used for the repayments principal due."
        },
        "includeFeesInFloorAmount": {
          "type": "boolean",
          "description": "Boolean flag, if true, the fees will be included along with the principal in the repayment floor amount, for a revolving credit account"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the principal payment base settings, auto generated, unique.",
          "readOnly": true
        },
        "totalDueAmountFloor": {
          "type": "number",
          "description": "The minimum total due amount a repayment made with this settings can have"
        },
        "principalCeilingValue": {
          "type": "number",
          "description": "The maximum principal due amount a repayment made with this settings can have"
        }
      },
      "description": "The principal payment account settings, holds the required information for the principal payment process of an account."
    },
    "LoanAccountSchedule": {
      "type": "object",
      "properties": {
        "installments": {
          "type": "array",
          "description": "The loan account schedule installments' list.",
          "items": {
            "$ref": "#/definitions/Installment"
          }
        },
        "currency": {
          "description": "The currency in which all the amounts are expressed",
          "$ref": "#/definitions/Currency"
        }
      },
      "description": "Represents a single loan account schedule structure."
    },
    "PaymentIdentification": {
      "type": "object",
      "properties": {
        "instructionIdentification": {
          "type": "string",
          "description": "Identifier of a payment instruction"
        },
        "endToEndIdentification": {
          "type": "string",
          "description": "Identifier assigned by the initiating party to the transaction"
        },
        "transactionIdentification": {
          "type": "string",
          "description": "Identifier unique for a period assigned by the first initiating party to the transaction"
        }
      },
      "description": "The payment identification details"
    },
    "Party": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the party"
        }
      },
      "description": "The details of the party for a transaction"
    },
    "RestError": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorSource": {
          "type": "string"
        },
        "errorReason": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "INVALID_BASIC_AUTHORIZATION",
            "INVALID_CREDENTIALS",
            "INVALID_API_OPERATION",
            "INVALID_PARAMETERS",
            "METHOD_NOT_IMPLEMENTED",
            "INTERNAL_ERROR",
            "API_NOT_AUTHORIZED",
            "USER_TRANSACTION_LIMIT_EXCEEDED",
            "API_CONFIGURATION_ERROR",
            "INVALID_TENANT_ID",
            "INVALID_PAGINATION_OFFSET_VALUE",
            "OUT_OF_BOUNDS_PAGINATION_OFFSET_VALUE",
            "INVALID_PAGINATION_LIMIT_VALUE",
            "OUT_OF_BOUNDS_PAGINATION_LIMIT_VALUE",
            "INVALID_PERMISSIONS",
            "INVALID_IP_ADDRESS",
            "INACTIVE_USER",
            "NO_API_ACCESS",
            "FEATURE_DISABLED",
            "MAX_FILE_SIZE_EXCEEDED",
            "MAX_FILENAME_LENGTH_EXCEEDED",
            "UNSUPPORTED_CHARACTER_ENCODING",
            "INVALID_API_PROTOCOL",
            "EXCESSIVE_INVALID_REQUESTS",
            "INCONSISTENT_IDENTIFIER_WITH_JSON",
            "INVALID_JSON_SYNTAX",
            "PARAMETER_NOT_ALLOWED",
            "START_DATE_AFTER_END_DATE",
            "OBJECT_NOT_FOUND",
            "MISSING_ENTITY_JSON",
            "MISSING_REQUIRED_PARAMETER",
            "READ_ONLY_MODE",
            "UNSUPPORTED_PAGINATION",
            "BLOCKING_OPERATION_IN_PROGRESS",
            "QUERY_TIMEOUT_EXCEPTION",
            "NON_REVERSIBLE_WRITE_OFF",
            "NON_WEEKLY_LOAN_REPAYMENTS",
            "INVALID_LOAN_ACCOUNT_ID",
            "INVALID_AMOUNT",
            "INVALID_DATE",
            "INVALID_NOTES",
            "INVALID_TRANSACTION_TYPE_ID",
            "INVALID_ACCOUNT_STATE",
            "INVALID_FEE",
            "LOAN_PRODUCT_MISMATCH",
            "INVALID_FIELD_FOR_TRANSACTION_TYPE",
            "INACTIVE_TRANSACTION_TYPE",
            "EXCESS_REPAYMENT_ERROR",
            "TRANSACTION_LOGGED_AFTER_NOT_DISBURSED_TRANCHE",
            "UNDEFINED_ACCOUNT_FOR_FINANCIAL_RESOURCE_ERROR",
            "INVALID_ACCOUNT_FOR_JOURNAL_ENTRY_ERROR",
            "MISSING_LOAN_ID",
            "MAXIMUM_EXPOSURE_EXCEEDED",
            "INVALID_STATE_TRANSITION",
            "NUMBER_OF_LOANS_EXCEEDED",
            "INVALID_FIRST_REPAYMENT_DUE_DATE",
            "INVALID_REPAYMENT_DUE_DAY",
            "INVALID_INTEREST_RATE",
            "INVALID_INSTALLMENTS",
            "MISSING_LINKED_ACCOUNT",
            "PREPAYMENT_NOT_ALLOWED_ERROR",
            "REPAYMENT_DATE_IN_THE_FUTURE_ERROR",
            "INVALID_DISBURSEMENT_DATE",
            "ILLEGAL_LOAN_PARAMETERS_MODIFICATION",
            "ORIGINAL_ACCOUNT_HAS_FUNDS",
            "INVALID_ACCOUNT_STATE_FOR_REPAYMENTS",
            "DISBURSEMENT_FEES_EXCEED_LOAN_AMOUNT",
            "INTEREST_CANNOT_BE_APPLIED",
            "ENTRY_DATE_BEFORE_OTHER_TRANSACTION",
            "INCONSISTENT_SCHEDULE_PRINCIPAL_DUE_WITH_LOAN_AMOUNT",
            "ACCOUNT_HAS_NO_ACCRUED_INTEREST",
            "INTEREST_ALREADY_APPLIED_ON_DISBURSEMENT_ACCOUNT",
            "INCONSISTENT_WITH_FIXED_DAYS_OF_MONTH",
            "NEGATIVE_PRINCIPAL_FOR_INSTALLMENT",
            "INVALID_TAX_RATE",
            "INSUFFICIENT_GUARANTEES",
            "MISSING_REPAYMENT_PERIOD_COUNT",
            "MISSING_REPAYMENT_INTERVAL",
            "FUTURE_PAYMENT_NOT_ALLOWED_ERROR",
            "DISBURSEMENT_WITH_ZERO_LOAN_AMOUNT_NOT_ALLOWED",
            "MINIMUM_ARREARS_DAYS_NOT_REACHED",
            "ACCOUNT_ALREADY_UNLOCKED",
            "LOAN_AMOUNT_DECIMALS_NOT_ALLOWED_WITH_ROUNDING",
            "RESCHEDULED_LOAN",
            "REFINANCED_LOAN",
            "INVALID_PRODUCT_WITH_FUNDING_SOURCE_DISABLED",
            "INVALID_ID",
            "FAILED_TO_GENERATE_IDENTIFIER",
            "INCONSISTENT_ACCOUNT_ID_WITH_ACCOUNT_HOLDER_TYPE",
            "INVALID_ASSET_NAME",
            "GUARANTOR_KEY_NOT_ALLOWED",
            "GUARANTOR_SAVINGS_KEY_NOT_ALLOWED",
            "INVALID_GUARANTOR_KEY",
            "INVALID_SAVINGS_ACCOUNT_KEY",
            "INVALID_GUARANTOR_STATE",
            "DUPLICATED_GUARANTOR_WITHOUT_SAVINGS_ACCOUNT",
            "DUPLICATED_SAVINGS_ACCOUNT",
            "INSUFFICIENT_SAVINGS_ACCOUNT_BALANCE",
            "INVALID_SAVINGS_ACCOUNT_STATE",
            "DUPLICATED_ASSET",
            "GUARANTOR_ASSET_NAME_NOT_ALLOWED",
            "TRANSACTION_NOT_FOUND",
            "INVALID_TRANSACTION_TYPE",
            "UNREVERSED_TRANSACTION_LOGGED_AFTER_CURRENT_ONE",
            "INVALID_GUARANTOR_PERMISSION",
            "INVALID_CLIENT_ROLE_PERMISSION_FOR_OPENING_ACCOUNTS",
            "MISSING_PENALTY_RATE",
            "INVALID_REPAYMENT_NUMBER",
            "MISSING_REPAYMENT_NUMBER",
            "INVALID_REPAYMENT_STATE",
            "CENTRE_MEETING_DAY_IN_NON_WORKING_DAY",
            "ARBITRARY_FEE_NOT_ALLOWED",
            "INVALID_REPAYMENT_ID",
            "ACCOUNT_BALANCE_OUTSIDE_CONSTRAINTS",
            "EDITING_DATE_NOT_IN_CENTER_MEETING_DAY",
            "CUSTOM_MADE_INSTALLMENT_ADDED_BEFORE_PAID_INSTALLMENT",
            "EDITING_REPAYMENTS_NOT_ALLOWED",
            "INTEREST_BALANCE_CANT_BE_EDITED_AT_SPECIFIED_DATE",
            "INVALID_DUE_DATE",
            "NEGATIVE_BALANCE",
            "NON_POSITIVE_TOTAL_BALANCE",
            "PARAMS_INCONSISTENT_WITH_PRODUCT_RULES",
            "INVALID_GRACE_PERIOD",
            "INVALID_ANTICIPATED_DISBURSEMENT",
            "INVALID_REPAYMENT_FREQUENCY",
            "INVALID_PRINCIPAL_REPAYMENT_INVERVAL",
            "INVALID_PRODUCT_STATE",
            "BALLOON_PAYMENTS_NOT_ALLOWED_BY_PRODUCT",
            "MANDATORY_PERIODIC_PAYMENT",
            "PERIODIC_PAYMENT_GREATER_THAN_LOAN_AMOUNT",
            "MISSING_INTEREST_RATE_SPREAD_ON_PRODUCT",
            "FIRST_REPAYMENT_DATE_BEFORE_EXPECTED_DISBURSEMENT_DATE",
            "INVALID_PENALTY_RATE",
            "CANNOT_EDIT_SOLIDARITY_LOANS",
            "INVALID_INTEREST_SPREAD",
            "INVALID_PERIODIC_PAYMENT",
            "UNKNOWN_LOAN_ACCOUNT_ERROR",
            "MISSING_GROUP_ID",
            "INVALID_GROUP_ID",
            "INVALID_FULL_DETAILS",
            "INVALID_INDICATORS",
            "GROUP_NOT_FOUND",
            "INVALID_PARAMATERS_FOR_PRODUCT",
            "INVALID_USER_WHO_APPROVED_THE_LOAN_CANNOT_DISBURSE_IT",
            "INVALID_GROUP_SIZE",
            "MULTIPLE_GROUP_MEMBERSHIP",
            "INVALID_GROUP_ROLE_NAME_KEY",
            "GROUP_ROLE_CLIENT_NOT_GROUP_MEMBER",
            "TRANSACTION_ALREADY_REVERSED",
            "INVALID_TRANSACTION_ID",
            "TRANSACTION_ID_AND_ACCOUNT_MISMATCH",
            "TRANSACTION_LOGGED_FOR_CLOSED_TILL",
            "TILL_BALANCE_ABOVE_MAX",
            "TILL_BALANCE_UNDER_MIN",
            "TRANSACTION_MADE_FROM_A_TRANSFER",
            "TRANSACTION_MADE_FROM_A_DISBURSEMENT",
            "DEPOSIT_ACCOUNT_HAS_MATURITY_DATE_SET",
            "BALANCE_IS_NULL",
            "GUARANTOR_NOT_ALLOWED_BY_PRODUCT",
            "COLLATERAL_NOT_ALLOWED_BY_PRODUCT",
            "CANNOT_CHANGE_TILL_BALANCE",
            "ASYNC_TRANSACTION_IN_PROGRESS",
            "DEDUCTED_FEES_TOTAL_MORE_THAN_LOAN_AMOUNT",
            "NO_CAPITALIZED_DISBURSEMENT_FESS_WHEN_ZERO_LOAN_AMOUNT",
            "DISBURSE_TO_SAVINGS_NOT_AVALAIBLE_WITH_INVESTOR_FUNDS",
            "TRANSACTION_CHANNEL_IS_MANDATORY",
            "TRANSACTION_CHANNEL_NOT_AVAILABLE_WHEN_DISBURSE_TO_SAVINGS",
            "GUARANTOR_CANNOT_BE_DELETED",
            "CUSTOM_AMOUNT_IS_MANDATORY",
            "INVALID_TRANSACTION_CHANNEL",
            "MISSING_FEE",
            "INCONSISTENT_ACCOUNT_FEE_WITH_PRODUCT_FEE",
            "FULL_TERM_FEE_CANNOT_BE_AMORTIZED_DUE_TO_APPLICATION_DATE",
            "CANNOT_USE_EFFECTIVE_INTEREST_RATE_FEE_WITHOUT_INTEREST_RATE_VALUE",
            "TRANSACTION_DETAILS_NOT_AVAILABLE_FOR_PRODUCT",
            "FEES_NOT_AVAILABLE_FOR_PRODUCT",
            "EXPECTED_DISBURSEMENT_DATE_NOT_AVAILABLE_FOR_PRODUCT",
            "FIRST_REPAYMENT_DATE_NOT_AVAILABLE_FOR_PRODUCT",
            "LOAN_PRODUCT_PREPAYMENT_OPTIONS_MISMATCH",
            "INVALID_LAST_REPAYMENT_DUE_DATE_CHANGE_BECAUSE_ACCOUNT_HAS_FULL_TERM_FEE_APPLIED",
            "INVALID_HOLIDAY_SETUP",
            "REDRAW_DISABLED",
            "INSUFFICIENT_REDRAW_BALANCE",
            "INVALID_FEES_DETAILS",
            "PRODUCT_DOES_NOT_ALLOW_WITHDRAWAL_TRANSACTIONS",
            "EXCESS_PAYMENT_MADE_AMOUNT",
            "PRODUCT_DOES_NOT_ALLOW_PAYMENT_MADE_TRANSACTIONS",
            "MISSING_FEE_KEY",
            "INVALID_FEE_KEY",
            "INCONSISTENT_FEE_AMOUNT_WITH_PRODUCT_FEE",
            "FEE_AMOUNT_MUST_BE_STRICTLY_POSITIVE",
            "REQUIRED_FEE_MISSING",
            "FEE_NOT_ACTIVE",
            "FEE_NOT_ALLOWED",
            "INCONSISTENT_FIRST_REPAYMENT_DATE_WITH_PRODUCT_OFFSET",
            "MISSING_ORIGINAL_TRANSACTION_ID",
            "REPAYMENT_WAS_FULLY_PAID",
            "REPAYMENT_HAS_INTEREST_APPLIED",
            "DUE_DATE_BEFORE_ACCOUNTING_CLOSURE",
            "DUE_DATE_BEFORE_LOGGED_TRANSACTION",
            "INVALID_PARENT_ACCOUNT_KEY",
            "AUTOMATICALLY_ADDED_INSTALLEMENTS_ARE_NOT_EDITABLE",
            "PURE_GRACE_INSTALLMENT_ARE_NOT_EDITABLE",
            "CUSTOM_PAYMENT_NOT_ALLOWED_BY_PRODUCT",
            "SAME_CUSTOM_PAYMENT_AMOUNT_TYPE_USED_MULTIPLE_TIMES",
            "CUSTOM_PAYMENT_AMOUNT_DIFFERENT_THAN_TOTAL_PAYMENT_AMOUNT",
            "ARREARS_TOLERANCE_PERIOD_OUTSIDE_CONSTRAINTS",
            "NEGATIVE_ARREARS_TOLERANCE_PERIOD",
            "REQUIRED_ARREARS_TOLERANCE_PERIOD_MISSING",
            "DUE_DATE_BEFORE_FEE_AMORTIZATION",
            "MAX_CLIENT_LIMIT_REACHED",
            "PENALTY_METHOD_NOT_ALLOWED_BY_PRODUCT",
            "CANNOT_REVERSE_TECHNICAL_OVERDRAFT",
            "INSUFFICIENT_BALANCE",
            "INVALID_PRODUCT_TYPE",
            "DUPLICATE_DISBURSEMENT_FEE",
            "NO_DUE_AMOUNT_TO_BE_PAID",
            "UNKNOWN_GROUP_ERROR",
            "MISSING_CLIENT_ID",
            "INVALID_CLIENT_ID",
            "INVALID_CLIENT_KEY",
            "INVALID_PICTURE_KEY",
            "INVALID_SIGNATURE_KEY",
            "INVALID_CLIENT_STATE",
            "INVALID_CLIENT_ROLE_KEY",
            "INCONSISTENT_CLIENT_ROLE_WITH_CLIENT_TYPE",
            "INVALID_DEPENDENT_CUSTOM_FIELD_VALUE",
            "INVALID_BIRTH_DATE",
            "DUPLICATE_CLIENT",
            "INVALID_CLIENT_STATE_TYPE",
            "INVALID_CLIENT_STATE_TRANSITION",
            "CLIENT_IS_MEMBER_OF_A_GROUP",
            "CLIENT_IS_GUARANTOR",
            "CLIENT_HAS_ACCOUNTS",
            "CLIENT_ID_ALREADY_IN_USE",
            "GROUP_ID_ALREADY_IN_USE",
            "GROUP_HAS_ACCOUNTS",
            "MISSING_CLIENT_BASIC_DETAILS",
            "EMAIL_ADDRESS_SIZE_INVALID",
            "UNKNOWN_CLIENT_ERROR",
            "INVALID_SAVINGS_ACCOUNT_ID",
            "BALANCE_BELOW_ZERO",
            "MISSING_SAVINGS_ID",
            "BACKDATE_BEFORE_ACTIVATION",
            "BACKDATE_BEFORE_OTHER_OPERATION",
            "BACKDATE_SET_IN_THE_FUTURE",
            "INVALID_DEPOSIT_AMOUNT",
            "INVALID_DEPOSIT_ACCOUNT_STATE",
            "LOCKED_SAVINGS_AMOUNT",
            "SAVINGS_PRODUCT_MISMATCH",
            "SAVINGS_ACCOUNT_INVALID",
            "ACCOUNT_ID_ALREADY_IN_USE",
            "PRODUCT_DOESNT_ALLOW_WITHHOLDING_TAXES",
            "INVALID_WITHHOLDING_TAX_SOURCE_TYPE",
            "INVALID_INTEREST_CHARGE_FREQUENCY",
            "INVALID_INTEREST_CHARGE_FREQUENCY_COUNT",
            "INVALID_SAVINGS_ACCOUNT_STATE_TRANSITION",
            "MAXIMUM_WITHDRAWAL_AMOUNT_EXCEEDED",
            "MAXIMUM_OVERDRAFT_LIMIT_EXCEEDED",
            "OVERDRAFT_NOT_ALLOWED",
            "MISSING_INTEREST_RATE_FROM_SAVINGS_PRODUCT",
            "POSITIVE_SECURED_AMOUNT",
            "MINIMUM_OPENING_BALANCE_ACHIEVED",
            "ACCOUNT_HAS_TRANSACTIONS",
            "INVALID_OVERDRAFT_INTEREST_CHARGE_FREQUENCY",
            "INVALID_OVERDRAFT_INTEREST_CHARGE_FREQUENCY_COUNT",
            "RECOMMENDED_DEPOSIT_AMOUNT_INVALID",
            "MISSING_TYPE_PARAMETER",
            "INVALID_DEPOSIT_ACCOUNT_ID",
            "PRODUCT_SPECIFIES_OVERDRAFT_ALLOWED",
            "PRODUCT_SPECIFIES_OVERDRAFT_NOT_ALLOWED",
            "CURRENT_ACCOUNT_PRODUCT_DISABLED",
            "FIXED_DEPOSIT_PRODUCT_DISABLED",
            "COLLATERAL_FEATURE_DISABLED",
            "CREDIT_OFFICER_DISABLED",
            "DATA_EXPORT_DISABLED",
            "MAX_WITHDRAWAL_CANNOT_BE_NEGATIVE",
            "MAX_WITHDRAWAL_CANNOT_BE_ZERO",
            "WITHHOLDING_TAXES_DISABLED",
            "FUNDING_SOURCE_DISABLED",
            "RESET_DATA_DISABLED",
            "SOLIDARITY_GROUP_DISABLED",
            "SAVINGS_PLAN_DISABLED",
            "SAVINGS_ACCOUNT_DISABLED",
            "REVOLVING_CREDIT_DISABLED",
            "INDICATORS_DISABLED",
            "FIXED_TERM_LOAN_DISABLED",
            "FLAT_INTEREST_DISABLED",
            "EFFECTIVE_INTEREST_RATE_DISABLED",
            "RISK_REPORTING_DISABLED",
            "WITHDRAWAL_PAST_OVERDRAFT_CONSTRAINTS",
            "INTEREST_FREE_LOAN_DISABLED",
            "MISSING_DEPOSIT_ID",
            "INVALID_REVOLVING_SETTINGS",
            "UNKNOWN_SAVINGS_ACCOUNT_ERROR",
            "TRANSFER_CANT_BE_MADE",
            "CANNOT_MAKE_TRANSFER_TO_SOURCE_ACCOUNT",
            "INVALID_TARGET_ACCOUNTING_STATE",
            "INVALID_TARGET_ACCOUNTING_CURRENCY",
            "TRANSFER_AMOUNT_IS_NOT_POSITIVE",
            "INVALID_PRODUCT_ID",
            "TRANSFER_AS_POSTDATED_PAYMENT",
            "UNDEFINED_EXCHANGE_RATE_FOR_CURRENCY",
            "INVALID_PRODUCT_KEY",
            "CANNOT_MAKE_TRANSFER_TO_FUNDED_ACCOUNTS_WITH_ACCOUNTING_ENABLED",
            "LINKED_ACCOUNT_DELETION_ERROR",
            "ACCOUNT_HAS_REMAINING_BALANCE",
            "CANNOT_DISBURSE_LOCKED_ACCOUNTS",
            "DISBURSEMENT_DATE_AFTER_LAST_REPAYMENT_DUE_DATE",
            "INTEREST_RATE_NOT_AVAILABLE_FOR_INDEXED_RATES",
            "INTEREST_SPREAD_NOT_AVAILABLE_FOR_FIXED_RATES",
            "TRANCHES_EXPECTED_DISBURSMENT_DATES_NOT_ORDERED",
            "TRANCHES_NOT_ALLOWED",
            "TRANCHES_NOT_DEFINED",
            "MORE_TRANCHES_THAN_ALLOWED",
            "TOTAL_TRANCHES_AMOUNT_MORE_THAN_LOAN_AMOUNT",
            "TOTAL_AMOUNT_NOT_EQUAL_WITH_LOAN_AMOUNT",
            "TRANCHE_AMOUNT_SHOULD_BE_STRICT_POSITIVE",
            "INVALID_TRANCHE_KEY",
            "CANNOT_MODIFY_DISBURSED_TRANCHE",
            "DISBURSEMENT_DATE_BEFORE_NOT_REVERSED_TRANSACTION",
            "CANNOT_MODIFY_TRANCHES_ON_RESCHEDULED_REFINANCED_ACCOUNTS",
            "ALL_TRANCHES_ALREADY_DISBURSED",
            "TRANCHES_CANNOT_BE_EDITED",
            "INTEREST_RATE_SHOULD_BE_ZERO_OR_EMPTY",
            "INTEREST_SPREAD_SHOULD_BE_ZERO_OR_EMPTY",
            "INCONSISTENT_DATE_WITH_NEXT_TRANCHE",
            "INTEREST_RATE_CANNOT_BE_EDITED_FOR_TIERED_INTEREST_RATES",
            "INTEREST_SPREAD_CANNOT_BE_EDITED_FOR_TIERED_INTEREST_RATES",
            "INVALID_INTEREST_RATE_TIERS",
            "INVALID_OVERDRAFT_INTEREST_RATE_TIERS",
            "PAY_OFF_INVALID_INTEREST_PAID",
            "PAY_OFF_INVALID_FEES_PAID",
            "PAY_OFF_INVALID_PENALTY_PAID",
            "INTEREST_TYPE_NOT_ALLOWED",
            "INVALID_GL_ACCOUNT_ID",
            "INVALID_GL_ACCOUNT_TYPE",
            "JOURNAL_ENTRY_BEFORE_CLOSURE",
            "DEBITS_DO_NOT_MATCH_CREDITS",
            "JOURNAL_ENTRY_DATE_NOT_DEFINED",
            "GL_ACCOUNT_IS_HEADER",
            "GL_ACCOUNT_DOES_NOT_SUPPORT_MANUALLY_ENTRIES",
            "NO_INTER_BRANCH_GL_ACCOUNT",
            "INVALID_JOURNAL_TRANSACTION_ID",
            "DUPLICATE_JOURNAL_TRANSACTION_ID",
            "INVALID_ACCOUNTING_DATE_ORDER",
            "INVALID_ACCOUNTING_DATE_RANGE",
            "JOURNAL_ENTRY_DATE_IN_THE_FUTURE",
            "JOURNAL_ENTRY_DATE_IN_THE_PAST_BEFORE_THE_ALLOWED_LIMIT",
            "INVALID_BOOKING_DATE",
            "BOOKING_DATE_BEFORE_VALUE_DATE",
            "FROM_CURRENCY_NOT_DEFINED",
            "FROM_CURRENCY_IS_NOT_BASE_CURRENCY",
            "FROM_CURRENCY_DOES_NOT_EXIST",
            "CURRENCY_SHOULD_BE_DIFFERENT_THEN_ORGANISATION_BASE_CURRENCY",
            "START_DATE_SHOULD_BE_AFTER_LAST_ACCOUNTING_RATE",
            "RATE_SHOULD_BE_POSITIVE",
            "FUTURE_START_DATE_NOT_ALLOWED",
            "ACCOUNTING_IN_MULTICURRENCY_SHOULD_BE_ENABLED",
            "GL_JOURNAL_ENTRIES_USING_PREV_ACCOUNTING_RATE_SHOULD_NOT_EXISTS",
            "INVALID_CURRENCY_CODE",
            "CURRENCY_NOT_MATCHING",
            "ACCOUNT_CURRENCY_NOT_MATCH",
            "MISSING_CURRENCY",
            "INVALID_EXCHANGE_RATE_VALUE",
            "INCONSISTENT_START_DATE_WITH_TRANSACTIONS",
            "BUY_RATE_GREATER_THAN_SELL_RATE",
            "RATE_NOT_SET",
            "RATE_TO_SAME_CURRENCY",
            "DATE_BEFORE_LAST_RATE_DATE",
            "START_DATE_IN_FUTURE",
            "DATE_ON_LAST_RATE_DATE",
            "DELETE_BASE_CURRENCY",
            "CURRENCY_ASSOCIATED_WITH_TRANSACTION",
            "CURRENCY_USED_IN_PRODUCT_OR_GL_ACCOUNT",
            "UNDEFINED_ACCOUNTING_RATE_FOR_CURRENCY",
            "ACCOUNTING_TRANSACTION_CHANNEL_CURRENCY_MISMATCH",
            "INVALID_USER_NAME",
            "INVALID_USER_ID",
            "INVALID_CREDIT_OFFICER_KEY",
            "INCONSISTENT_CREDIT_OFFICER_WITH_BRANCH",
            "MISSING_CREDIT_OFFICER_KEY",
            "MISSING_BRANCH_KEY",
            "MISSING_CENTRE_KEY",
            "INVALID_USER_ROLE_KEY",
            "USER_IS_LOCKED",
            "INVALID_PASSWORD",
            "EMAIL_ADDRESS_ALREADY_REGISTERED_WITH_ANOTHER_USER",
            "EMAIL_ADDRESS_FORMAT_IS_INVALID",
            "USERNAME_ALREADY_EXISTS",
            "MAX_USER_LIMIT_REACHED",
            "CANNOT_MANAGE_USER_BRANCH",
            "NOT_ENOUGH_PRIVILDGES_FOR_CHANGING_USER_SETTINGS",
            "ONLY_ONE_ROLE_ALLOWED",
            "INVALID_TRANSACTION_LIMIT_TYPE",
            "NOT_ENOUGH_PRIVILEDGES_TO_CREATE_ADMIN_USER",
            "CANNOT_HAVE_NEGATIVE_TRANSACTION_LIMITS",
            "INVALID_VALUE_FOR_MANAGED_BRANCHES",
            "CANNOT_HAVE_ADMIN_WITHOUT_FULL_BRANCHES_ACCESS",
            "CANNOT_HAVE_OFFICER_ADMIN_WITHOUT_MANAGE_OTHER_ENTITIES_ACCESS",
            "INCONSISTENT_CAN_MANAGE_BRANCHES_WITH_CAN_MANAGE_ENTITIES",
            "MISSING_EMAIL_ADDRESS",
            "MISSING_MOBILE_PHONE",
            "CANNOT_UPDATE_INACTIVE_OR_LOCKED_USERS",
            "ROLE_AND_ACCESS_MISMATCH",
            "MISSING_ACCESS_RIGHTS",
            "PHONE_NUMBER_IS_MISSING",
            "TWO_FACTOR_AUTHENTICATION_NOT_AVAILABLE",
            "USERNAME_CANNOT_BE_CHANGED",
            "INVALID_ACCESS_RIGHTS",
            "MISSING_ASSIGNED_BRANCH",
            "CANNOT_DELETE_LAST_USER",
            "CANNOT_DEACTIVATE_LAST_USER",
            "CANNOT_HAVE_ADMIN_WITHOUT_MAMBU_ACCESS",
            "CANNOT_UPDATE_FEDERATED_USER",
            "CANNOT_UPDATE_SUPPORT_USER",
            "CANNOT_CHANGE_ROLE_FOR_FEDERATED_USER",
            "CANNOT_LOCK_USER_FROM_API",
            "CANNOT_DELETE_SUPPORT_USER_BY_REGULAR_USER",
            "CANNOT_DELETE_ADMIN_USER",
            "CANNOT_DELETE_USER_WITH_PERFORMED_ACTIVITIES",
            "CANNOT_DELETE_SELF",
            "CANNOT_DEACTIVATE_SELF",
            "CANNOT_UPDATE_DELIVERY_USER",
            "CANNOT_DELETE_DELIVERY_USER_BY_REGULAR_USER",
            "INVALID_BRANCH_ID",
            "INVALID_BRANCH_KEY",
            "INVALID_MANAGED_BRANCH_ID",
            "BRANCH_IS_NOT_ACTIVE",
            "INVALID_CENTRE_KEY",
            "INVALID_CENTRE_ID",
            "INCONSISTENT_CENTRE_WITH_BRANCH",
            "CENTRE_IS_NOT_ACTIVE",
            "INCONSISTENT_VALUE_WITH_CUSTOM_FIELD_TYPE",
            "REQUIRED_CUSTOM_FIELD_MISSING",
            "INVALID_CUSTOM_FIELD_ID",
            "MAX_CUSTOM_FIELD_VALUE_LENGTH_EXCEEDED",
            "INVALID_CUSTOM_FIELD_ENTITY_KEY",
            "VIEW_TYPE_NOT_MATCHING_RESOURCE",
            "VIEW_NOT_ACCESSIBLE_FOR_USER",
            "CUSTOM_FIELD_DEACTIVATED",
            "CUSTOM_FIELD_REQUIRED",
            "CUSTOM_FIELD_NOT_AVAILABLE_FOR_ENTITY",
            "INVALID_CUSTOM_FIELD_LINKED_ENTITY_KEY",
            "DEPENDENT_CUSTOM_FIELD_VALUE_REQUIRED",
            "INCONSISTENT_VALUE_WITH_SET_TYPE",
            "GROUPED_INDEXES_NOT_CONSECUTIVE",
            "TO_MANY_VALUES_FOR_SAME_GROUPED_CUSTOM_FIELD",
            "INVALID_CUSTOM_FIELD_GROUP_INDEX",
            "INCONSISTENT_CUSTOM_FIELD_VALUE_WITH_PATTERN",
            "DUPLICATE_CUSTOM_FIELD_VALUES",
            "CUSTOM_FIELD_SET_CHANGE_NOT_ALLOWED",
            "CUSTOM_FIELD_SET_NULL",
            "CUSTOM_FIELD_USAGE_CHANGE_NOT_ALLOWED",
            "DATATYPE_OR_TYPE_CHANGED",
            "CUSTOM_FIELD_NAME_NOT_UNIQUE",
            "ENCODED_KEY_MUST_BE_EMPTY_ON_CREATE",
            "CUSTOM_FIELDS_NEED_CHANNEL_PROVIDED",
            "DUPLICATE_UNIQUE_VALUE",
            "REFERRED_IN_CUSTOM_FIELD",
            "TRANSACTION_TYPE_NOT_ACCEPTING_CUSTOM_FIELDS",
            "INVALID_CUSTOM_FIELD_KEY",
            "BUILT_IN_CUSTOM_FIELD_CHANGE_NOT_ALLOWED",
            "INVALID_ID_DOCUMENT",
            "REQUIRED_ID_DOCUMENT_MISSING",
            "ADDING_OTHER_ID_DOCUMENTS_IS_DISABLED",
            "INVALID_ID_DOCUMENT_TEMPLATE_KEY",
            "DOCUMENT_CANNOT_BE_DELETED",
            "INVALID_DOCUMENT_ID",
            "INVALID_FILE_EXTENSION",
            "FILE_EXTENSION_NOT_ALLOWED",
            "INCONSISTENT_EXTENSION_WITH_FILE_CONTENT",
            "MALWARE_CONTENT_DETECTED",
            "INVALID_FILENAME",
            "NO_PROFILE_PICTURE_SET",
            "NO_PROFILE_SIGNATURE_SET",
            "HAS_DOCUMENT_ATTACHED",
            "UNSUPPORTED_IMAGE_TYPE",
            "INVALID_TASK_ID",
            "INVALID_TASK_STATE_AND_COMPLETION_DATE",
            "INVALID_TASK_FIELD_CHANGE",
            "INVALID_TASK_STATUS",
            "INVALID_TASK_TITLE_LENGTH",
            "HAS_TASK_ATTACHED",
            "EDITING_VIEW_TYPE_NOT_ALLOWED",
            "INVALID_CUSTOM_FIELD_SET_ID",
            "TRANSACTION_LINKED_TO_A_REPAYMENT",
            "ANTIVIRUS_NOT_AVAILABLE",
            "MISSING_FROM_DATE",
            "MISSING_TO_DATE",
            "MAXIMUM_ONE_FILTER_ALLOWED",
            "TILL_BALANCE_OUTSIDE_CONSTRAINTS",
            "TRANSACTION_IS_NOT_WITHIN_CHANNEL_CONSTRAINTS",
            "INVALID_ADDRESS",
            "CLIENT_ROLE_DOES_NOT_ALLOW_ADDRESS",
            "ADDRESS_CHANGE_NOT_ALLOWED",
            "INVALID_ADDRESS_LINE1",
            "INVALID_ADDRESS_LINE2",
            "INVALID_CITY",
            "INVALID_REGION",
            "INVALID_POSTCODE",
            "INVALID_COUNTRY",
            "DATA_IMPORT_IN_PROGRESS",
            "DATABASE_BACKUP_IN_PROGRESS",
            "DATABASE_BACKUP_NOT_FOUND",
            "CLIENT_IN_MIGRATION",
            "INVALID_NUMBER_OF_SHEETS",
            "UNDEFINED_SHEET",
            "WRONG_SHEET_POSITION",
            "INVALID_NUMBER_OF_COLUMNS_FOR_SHEET",
            "UNDEFINED_COLUMN",
            "WRONG_COLUMN_POSITION",
            "INVALID_ASSIGNMENT",
            "INVALID_INDEX_RATE_SOURCE_ID",
            "START_DATE_BEFORE_LAST_INDEX_REVIEWD_DATE",
            "INVALID_INDEX_RATE_START_DATE",
            "NO_INDEX_RATE_AVAILABLE",
            "NO_TAX_RATE_AVAILABLE",
            "INVALID_INDEX_RATE_SOURCE",
            "INDEX_RATE_SOURCE_IN_USE",
            "NON_TAXABLE_FEE_NOT_ALLOWED",
            "NON_TAXABLE_FEE_NOT_ALLOWED_ON_FIXED_PRODUCT",
            "INCONSISTENT_GROUP_MEMBER_PARENT_KEY",
            "INCONSISTENT_GROUP_MEMBER_ENCODED_KEY",
            "INCONSISTENT_GROUP_ROLE_PARENT_KEY",
            "INCONSISTENT_GROUP_ROLE_ENCODED_KEY",
            "PRODUCT_LINE_OF_CREDIT_AFFILIATION_CONSTRAINT_MISMATCH",
            "DISBURSEMENT_DATE_BEFORE_LINE_OF_CREDIT_START_DATE",
            "MATURITY_DATE_AFTER_LINE_OF_CREDIT_END_DATE",
            "LINE_OF_CREDIT_AMOUNT_EXCEEDED",
            "LINE_OF_CREDIT_REQUIRED_EXCEPTION",
            "OVERDRAFT_EXPIRY_DATE_AFTER_LINE_OF_CREDIT_END_DATE",
            "CANNOT_CREATE_ACCOUNT_WITH_LINE_OF_CREDIT",
            "LINE_OF_CREDIT_REQUIRES_OVERDRAFT_MAX_LIMIT",
            "LINE_OF_CREDIT_REQUIRES_OVERDRAFT_EXPIRY_DATE",
            "INVALID_LINE_OF_CREDIT_ID",
            "ACCOUNT_ALREADY_ON_LINE_OF_CREDIT",
            "INCONSISTENT_LINE_OF_CREDIT_CLIENT_WITH_ACCOUNT_OWNER",
            "ACCOUNT_IS_NOT_PART_OF_LINE_OF_CREDIT",
            "INVALID_LINE_OF_CREDIT_STATE",
            "HAS_LINES_OF_CREDIT",
            "LINE_OF_CREDIT_ID_ALREADY_IN_USE",
            "EXPIRE_DATE_BEFORE_START_DATE",
            "INVALID_CLIENT_ROLE_PERMISSION_FOR_OPENING_LINES_OF_CREDIT",
            "MISSING_LINE_OF_CREDIT_START_DATE",
            "MISSING_LINE_OF_CREDIT_EXPIRE_DATE",
            "MISSING_LINE_OF_CREDIT_AMOUNT",
            "LINE_OF_CREDIT_AMOUNT_NOT_STRICTLY_POSITIVE",
            "INVALID_ACCOUNT_HOLDER_ID",
            "MISSING_ACCOUNT_HOLDER_KEY",
            "MISSING_ACCOUNT_HOLDER_TYPE",
            "ACCOUNT_HOLDER_NOT_FOUND",
            "INVALID_ACCOUNT_HOLDER_STATE",
            "NO_ORGANIZATION_ICON",
            "NO_ORGANIZATION_LOGO",
            "MISSING_TEXT",
            "MAX_TEXT_LENGTH_EXCEEDED",
            "NUM_INSTALLMENTS_NOT_AVAILABLE_FOR_REVOLVING_CREDIT",
            "PRINCIPAL_PAYMENT_INCONSISTENT_WITH_PRODUCT",
            "SCHEDULE_PREVIEW_NOT_AVAILABLE_FOR_REVOLVING_CREDIT",
            "AMOUNT_MORE_THAN_CURRENT_AVAILABLE_AMOUNT",
            "INCONSISTENT_WITH_CENTRE_MEETING_DAY",
            "FIELD_IS_NOT_EDITABLE",
            "RESCHEDULED_REPAYMENT_BEFORE_DISBURSEMENT_DATE",
            "FIELD_NOT_ALLOWED",
            "OPERATION_NOT_ALLOWED_ON_FIELD",
            "INVALID_FILTER_VALUES",
            "INVALID_FILTER_SELECTION",
            "INVALID_FILTER_ELEMENT",
            "INVALID_FILTER_VALUE",
            "INVALID_FILTER_SECOND_VALUE",
            "TOO_MANY_FILTERS_PROVIDED",
            "INVALID_FILTER_DATA_ITEM_TYPE",
            "INSUFFICIENT_FUNDS_ACCOUNT_BALANCE",
            "INSUFFICIENT_FUNDS_TOTAL_AMOUNT",
            "FUNDS_NOT_ALLOWED",
            "FUNDING_AMOUNT_MUST_BE_STRICTLY_POSITIVE",
            "FUNDER_INTEREST_COMMISSION_CONSTRAINTS_VALIDATION",
            "MISSING_FUNDER_INTEREST_COMMISSION",
            "INVALID_FUND_ENCODED_KEY",
            "INVESTORS_TOTAL_AMOUNT_MORE_THAN_LOAN_AMOUNT",
            "INVALID_FUND_ID",
            "INACTIVE_FUND_ID",
            "INVALID_FUNDED_ACCOUNT_STATE",
            "FUND_SELL_WITH_NO_PURCHASES",
            "FUND_OVERSELL",
            "INVALID_SELLER_FUND_AMOUNT",
            "INVALID_SELLER_FUND_STATE",
            "INVALID_SELLER_FUNDING_ACCOUNT",
            "INVALID_INVESTMENT_PERCENTAGES_FOR_AMOUNTS",
            "FUND_SELF_SELL",
            "INVALID_BUYER_FUNDING_ACCOUNT",
            "DUPLICATE_BUYER_FUNDING_ACCOUNT",
            "INVALID_BUYER_FUND_AMOUNT",
            "INVALID_FUND_PURCHASE_PRICE",
            "INSUFFICIENT_BUYER_FUNDING_ACCOUNT_FUNDS",
            "LOAN_ACCOUNT_NOT_FUNDED_BY_SAVINGS_ACCOUNT",
            "INVALID_INTEREST_RATE_AGAINST_INTEREST_COMMISSION",
            "INVALID_SAVINGS_ACCOUNT_TYPE_FOR_FUNDING",
            "DUPLICATED_SAVINGS_ACCOUNT_FOR_FUNDING",
            "INVALID_FIXED_DAYS_OF_MONTH",
            "INVALID_SORTING_COLUMN",
            "COLUMN_NOT_SORTABLE",
            "INVALID_SORTING_ORDER",
            "ACCOUNT_TYPE_DOES_NOT_ALLOW_FIELD",
            "INVALID_GUARANTY_ENCODED_KEY",
            "INVALID_GUARANTY_TYPE",
            "INVALID_GUARANTOR_TYPE",
            "GUARANTY_KEY_TYPE_MISMATCH",
            "LOAN_ACCOUNT_NOT_FUNDED_BY_DEPOSIT_ACCOUNT",
            "INVALID_TEMPLATE_ID",
            "INVALID_TEMPLATE_TYPE",
            "MISSING_FIXED_DAYS_OF_MONTH",
            "FIXED_DAYS_OF_MONTH_NOT_ALLOWED",
            "REPAYMENT_FREQUENCY_NOT_ALLOWED",
            "REPAYMENT_PERIOD_COUNT_NOT_ALLOWED",
            "APPLIED_INTEREST_BALANCE_CANNOT_BE_REALLOCATED",
            "INVALID_NEW_TOTAL_LOAN_AMOUNT",
            "NEGATIVE_WRITE_OFF_AMOUNT",
            "CAPITALIZED_AMOUNTS_NOT_ALLOWED_DUE_TO_DIFFERENT_ACCOUNTING",
            "TOP_UP_AMOUNT_IS_MANDATORY",
            "RESTRUCTURE_DETAILS_ARE_MANDATORY",
            "NEGATIVE_TOP_UP_AMOUNT",
            "WRITE_OFF_AMOUNT_MORE_THAN_BALANCE_AMOUNT",
            "CANNOT_REFINANCE_REVOLVING_CREDIT_LOAN",
            "POSITIVE_CAPITALIZED_AMOUNTS_FOR_LOAN_FUNDED_NOT_ALLOWED",
            "WRITE_OFF_AMOUNT_FOR_LOAN_FUNDED_DIFFERENT_BY_BALANCE_AMOUNT",
            "CURRENCY_NOT_AVAILABLE_FOR_PRODUCT",
            "CURRENCY_NOT_EDITABLE",
            "TELLER_CANNOT_POST_TRANSACTION_IN_MULTI_CURRENCY",
            "NOT_ENOUGH_PRINCIPAL_TO_CONTINUE_FEE_AMORTIZATION",
            "MISSING_TEMPLATE_KEY",
            "TELLER_CANNOT_POST_TRANSACTION_WITHOUT_OPENED_TILL",
            "SETTINGS_ONLY_AVAILABLE_FOR_REVOLVING_CREDIT_ACCOUNTS",
            "INCONSISTENT_FLAT_AMOUNT_WITH_PRODUCT_CONSTRAINTS",
            "INCONSISTENT_PERCENTANGE_WITH_PRODUCT_CONSTRAINTS",
            "AMOUNT_REQUIRED_FOR_FLAT_PRINCIPAL_PAYMENT_METHOD",
            "PERCENTAGE_REQUIRED_FOR_PRINCIPAL_PAYMENT_PERCENTAGE_METHOD",
            "AMOUNT_ONLY_AVAILABLE_FOR_FLAT_PRINCIPAL_PAYMENT_METHOD",
            "PERCENTAGE_ONLY_AVAILABLE_FOR_PRINCIPAL_PERCENTAGE_METHOD",
            "INVALID_PRINCIPAL_PAYMENT_FLAT_AMOUNT_WITH_DECIMALS",
            "INVALID_PRINCIPAL_PAYMENT_PERCENTAGE_VALUE",
            "CANT_EDIT_LOCKED_OPERATIONS_IN_LOCKED_CAPPING_STATE",
            "CANT_UNLOCK_WHEN_INCOME_BALANCE_IS_OVER_PRINCIPAL_CAPPING_CONSTRAINTS",
            "CANNOT_BULK_REVERSE_INTERNAL_TRANSFER_REPAYMENT",
            "CANNOT_BULK_REAPPLY_TRANSACTION_BECAUSE_LOCKED_TRANSACTIONS_LOGGED_AFTER_IT",
            "CANNOT_BULK_REAPPLY_POSTDATED_REPAYMENTS",
            "CANNOT_BULK_REVERSE_ACTIVATION_TRANSACTION",
            "CLOSURE_DATE_AFTER_MAX_ALLOWED_UNDO_CLOSURE_PERIOD",
            "CLOSURE_DATE_BEFORE_GL_ACCOUNT_CLOSURE",
            "MISSING_ORGANIZATION_INTEREST_COMMISSION",
            "INSUFFICIENT_TRANSACTION_AMOUNT",
            "CANNOT_REVERSE_INTEREST_ON_DISBURSEMENT",
            "TRANSACTION_TYPE_IS_IRREVERSIBLE",
            "INTEREST_APPLIED_WITH_NULL_AMOUNT",
            "CANNOT_REVERSE_OFFSET_DEPOSIT_TRANSACTION",
            "CANNOT_LOCK_CAPPING_ACCOUNT_INVALID_ACCOUNT_ID",
            "CANNOT_LOCK_CAPPING_ACCOUNT_INVALID_ACCOUNT_STATE_FOR_LOCK",
            "INCOME_BALANCE_CONSTRAINTS_EXCEEDED",
            "CANNOT_BULK_REVERSE_LOAN_FRACTION_SOLD",
            "LATE_FEE_TRANSACTIONS_LOGGED_AFTER_REPAYMENT_TO_REAPPLY_ON_FIXED_ACCOUNT",
            "FEE_CANNOT_BE_POSTED_ON_RECOMPUTED_SCHEDULE",
            "INVALID_ORGANIZATION_INTEREST_COMMISSION",
            "ACCOUNT_ALREADY_LOCKED",
            "CANNOT_BULK_ADJUST_ACTIVATION_TRANSACTION",
            "PAYMENT_DUE_FEE_APPLIED_ON_DUE_DATES_TRANSACTIONS_LOGGED_AFTER_REPAYMENT_TO_REAPPLY_ON_FIXED_ACCOUNT",
            "REALLOCATION_CAN_BE_DONE_ONLY_ON_FUTURE_REPAYMENTS",
            "REALLOCATION_NOT_ALLOWED_ON_GRACE_INSTALLMENTS",
            "INVALID_PRINCIPAL_PAYMENT_METHOD",
            "REPAYMENT_VALUE_CHANGE_NOT_ALLOWED",
            "INTEREST_RATE_CHANGED_TRANSACTION_NOT_ALLOWED",
            "INTEREST_RATE_CHANGED_TRANSACTION_NOT_ALLOWED_FOR_LOAN_PRODUCT_TYPE",
            "INSTALLMENT_WITH_INTEREST_APPLIED_CANNOT_BE_EDITED",
            "UNABLE_TO_DETERMINE_DELETED_REPAYMENTS",
            "PAID_OR_PURE_GRACE_INSTALLMENT_CANNOT_BE_DELETED",
            "UNABLE_TO_DELETE_NON_CUSTOM_ADDED_REPAYMENT_FOR_REVOLVING_ACCOUNT",
            "INVALID_NUMBER_OF_INSTALLMENTS",
            "INVALID_PRINCIPAL_AMOUNT_WITH_DECIMALS",
            "INCONSISTENT_WITH_LINE_OF_CREDIT_VALID_UNTIL_DATE",
            "DUE_DATES_NOT_UNIQUE",
            "NON_ZERO_PRINCIPAL_REPAYMENT_CANNOT_BE_DELETED",
            "NON_DYNAMIC_ACCOUNT_REPAYMENT_DELETION_NOT_ALLOWED",
            "INVALID_LOAN_ACCOUNT_STATE_FOR_FUNDS_EDIT",
            "ENTRY_DATE_AFTER_MATURITY_DATE_WITH_LATE_FEES_AND_BULK_REVERSAL",
            "DIFFERENT_ACCOUNTING_STATE_BETWEEN_INVOLVED_PRODUCTS",
            "ACCOUNT_ALREADY_LINKED",
            "PRODUCT_DOES_NOT_ALLOW_LINKING",
            "UNLINKABLE_SAVINGS_PRODUCT",
            "INVALID_SAVINGS_ACCOUNT_HOLDER",
            "LINK_BETWEEN_ACCOUNTS_DOES_NOT_EXIST",
            "NON_NATIVE_GRACE_INSTALLMENT_CANNOT_BE_EDITED",
            "NON_NATIVE_GRACE_INSTALLMENT_CANNOT_BE_DELETED",
            "INSUFFICIENT_ACCOUNT_BALANCE",
            "INVALID_SAVINGS_ACCOUNT_TYPE",
            "MATURITY_PERIOD_ALREADY_STARTED",
            "LOAN_PRODUCT_PRINCIPAL_PAID_INSTALLMENT_STATUS_MISMATCH",
            "CANNOT_DELETE_LINK_FOR_ACTIVATED_OFFSET_LOAN",
            "INVALID_LANGUAGE",
            "INVALID_LINKED_SETTLEMENT_ACCOUNT_KEYS",
            "SAVINGS_ACCOUNT_ALREADY_LINKED",
            "INSTALLMENT_WITH_PENALTY_APPLIED_CANNOT_BE_EDITED",
            "INSTALLMENT_DUE_DATE_MOVED_BEFORE_LAST_PENALTY_APPLIED_DATE",
            "MATURITY_PERIOD_NOT_STARTED",
            "INVALID_AMOUNT_WITH_DECIMALS",
            "PAYMENT_HOLIDAY_INVALID_INSTALLMENT_STATE",
            "PAYMENT_HOLIDAYS_ARE_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_ALREADY_HAVE_PAYMENT_HOLIDAYS",
            "PAYMENT_HOLIDAYS_ARE_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_INTEREST_APPLIED",
            "PAYMENT_HOLIDAYS_ARE_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_FEE_APPLIED",
            "PAYMENT_HOLIDAYS_ARE_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_PENALTY_APPLIED",
            "RESEND_FAILED_NOTIFICATION_FAILED",
            "INVALID_NOTIFICATION_MESSAGE_STATE",
            "DUPLICATED_NOTIFICATION_ENCODED_KEY",
            "MAXIMUM_NUMBER_OF_NOTIFICATIONS_TO_RESEND_EXCEEDED",
            "DUE_DATES_NOT_IN_ASCENDING_ORDER",
            "ACCOUNT_PRODUCT_BRANCH_AVAILABILITY_MISMATCH",
            "CLIENT_HAS_ACTIVE_ACCOUNTS_WITH_PRODUCT_BRANCH_AVAILABILITY_MISMATCH",
            "PRODUCT_HAS_ASSOCIATED_ACCOUNTS",
            "MAX_NUMBER_OF_FILTERS_REACHED",
            "MAX_NUMBER_OF_COLUMNS_REACHED",
            "USAGE_RIGHTS_ROLE_NOT_AVAILABLE",
            "CURRENCY_NOT_DEFINED",
            "BASE_CURRENCY_CANNOT_BE_REMOVED",
            "CURRENCY_IN_USE_CANNOT_BE_REMOVED",
            "CURRENCY_DOES_NOT_EXIST",
            "CURRENCY_CANNOT_BE_CHANGED",
            "ONLY_ORGANISATION_BASE_CURRENCY_IS_ALLOWED",
            "INVALID_COMMUNICATION_MESSAGE_ENCODED_KEY",
            "INVALID_EMAIL_SUBJECT",
            "CANNOT_ADJUST_OFFSET_DEPOSIT_TRANSACTION",
            "INVALID_CREDIT_ARRANGEMENT_ID",
            "INVALID_CREDIT_ARRANGEMENT_STATE",
            "CREDIT_ARRANGEMENT_ID_ALREADY_IN_USE",
            "INVALID_CLIENT_ROLE_PERMISSION_FOR_OPENING_CREDIT_ARRANGEMENTS",
            "CREDIT_ARRANGEMENT_AMOUNT_NOT_STRICTLY_POSITIVE",
            "PRODUCT_CREDIT_ARRANGEMENT_AFFILIATION_CONSTRAINT_MISMATCH",
            "ACCOUNT_ALREADY_ON_CREDIT_ARRANGEMENT",
            "INCONSISTENT_CREDIT_ARRANGEMENT_CLIENT_WITH_ACCOUNT_OWNER",
            "CREDIT_ARRANGEMENT_REQUIRES_OVERDRAFT_EXPIRE_DATE",
            "CREDIT_ARRANGEMENT_REQUIRES_OVERDRAFT_MAX_LIMIT",
            "CREDIT_ARRANGEMENT_AMOUNT_EXCEEDED",
            "MATURITY_DATE_AFTER_CREDIT_ARRANGEMENT_END_DATE",
            "OVERDRAFT_EXPIRY_DATE_AFTER_CREDIT_ARRANGEMENT_END_DATE",
            "DISBURSEMENT_DATE_BEFORE_CREDIT_ARRANGEMENT_START_DATE",
            "CREDIT_ARRANGEMENT_REQUIRED_EXCEPTION",
            "ACCOUNT_IS_NOT_PART_OF_CREDIT_ARRANGEMENT",
            "CREDIT_ARRANGEMENT_ILLEGAL_PARAMETER_MODIFICATION",
            "CREDIT_ARRANGEMENT_HAS_NON_CLOSED_ACCOUNTS",
            "BASE_CURRENCY_NOT_UNIQUE",
            "CURRENCY_SYMBOL_LENGTH_OUTSIDE_CONSTRAINTS",
            "INEXISTING_CURRENCY_SYMBOL",
            "INVALID_TO_INSTALLMENT_POSITION",
            "INVALID_PMT_VALUE",
            "PAYMENT_PLAN_NOT_AVAILABLE",
            "AT_LEAST_ONE_PERIODIC_PAYMENT_PLAN_MANDATORY",
            "SUM_OF_PERIODIC_PAYMENTS_LESS_OR_EQUAL_WITH_LOAN_AMOUNT",
            "PAYMENT_PLAN_ENTRIES_NOT_ORDERED",
            "INTEREST_RATE_COMPUTATION_ERROR",
            "INVALID_PERIODIC_PAYMENT_ENCODED_KEY",
            "DUPLICATED_PERIODIC_PAYMENT_ENCODED_KEY",
            "INVALID_INTEREST_CHARGE_FREQUENCY_METHOD_MUST_BE_NULL",
            "INVALID_DAYS_IN_YEARS_METHOD_MUST_BE_NULL",
            "PAYMENT_HOLIDAYS_ADJUSTMENT_IS_NOT_ALLOWED_FOR_ACCOUNTS_WITH_PAYMENT_DUE_FEE_APPLIED_ON_DUE_DATES",
            "ACCOUNT_HAS_NO_PAYMENT_HOLIDAYS_ACCRUED_INTEREST",
            "ACCOUNT_HAS_LESS_PAYMENT_HOLIDAY_ACCRUED_INTEREST_THAN_THE_PROVIDED_AMOUNT_TO_APPLY",
            "PAYMENT_HOLIDAYS_ADJUSTMENT_IS_NOT_ALLOWED_FOR_INSTALLMENTS_WITHOUT_PAYMENT_HOLIDAYS",
            "PAYMENT_HOLIDAYS_ADJUSTMENT_IS_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_REPAYMENTS_POSTED",
            "PAYMENT_HOLIDAYS_ADJUSTMENT_IS_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_INTEREST_APPLIED",
            "PAYMENT_HOLIDAYS_ADJUSTMENT_IS_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_FEE_APPLIED",
            "PAYMENT_HOLIDAYS_ADJUSTMENT_IS_NOT_ALLOWED_FOR_INSTALLMENTS_THAT_HAVE_PENALTY_APPLIED",
            "PRODUCT_ID_ALREADY_IN_USE",
            "INVALID_ROUNDING_REPAYMENT_CURRENCY_FOR_PRODUCT",
            "SDK_CLIENT_COULD_NOT_BE_GENERATED",
            "SDK_CLIENT_LANGUAGES_COULD_NOT_BE_OBTAINED",
            "MAXIMUM_NUMBER_OF_COMMUNICATION_MESSAGES_TO_RESEND_EXCEEDED",
            "RESEND_FAILED_COMMUNICATON_FAILED",
            "DUPLICATE_ENCODED_KEY",
            "MESSAGE_STATE_MUST_BE_FAILED",
            "NO_MESSAGE_FOUND",
            "MESSAGE_NOT_FOUND",
            "MISSING_ENCODED_KEY",
            "URL_CONTAINS_QUOTES",
            "MISSING_RECIPIENT",
            "RECIPIENT_NOT_ALLOWED",
            "INVALID_CLIENT_RECIPIENT",
            "INVALID_CREDIT_OFFICER_RECIPIENT",
            "INVALID_GROUP_ROLE_RECIPIENT",
            "INVALID_CUSTOM_FIELD_RECIPIENT",
            "INVALID_EVENT",
            "INVALID_TARGET",
            "INVALID_PLACEHOLDER",
            "INVALID_FIELD_LENGTH",
            "INVALID_WEBHOOK_REQUEST_TYPE",
            "URL_CONTAINS_INVALID_PLACEHOLDERS",
            "INVALID_CUSTOM_REQUEST_HEADERS",
            "CARD_REFERENCE_TOKEN_FORMAT_INVALID",
            "CARD_REFERENCE_TOKEN_ALREADY_IN_USE",
            "CARD_REFERENCE_HAS_ASSOCIATED_HOLDS_OR_TRANSACTIONS",
            "CARD_REFERENCE_NOT_FOUND",
            "DUPLICATE_AUTHORIZATION_HOLD",
            "DUPLICATE_CARD_TRANSACTION",
            "AVAILABLE_BALANCE_BELOW_ZERO",
            "AUTHORIZATION_HOLD_NOT_FOUND",
            "INVALID_AUTHORIZATION_HOLD_STATE",
            "CARD_TRANSACTION_CANNOT_BE_ADJUSTED",
            "TECHNICAL_OVERDRAFT_IS_NOT_ALLOWED_FOR_PRODUCT",
            "CARD_TRANSACTION_NOT_FOUND",
            "CARD_TRANSACTION_MAX_REVERSAL_AMOUNT_EXCEEDED",
            "CARDS_FEATURE_DISABLED",
            "PRODUCT_MUST_BE_ACTIVE",
            "TARGET_AMOUNT_IS_NEGATIVE",
            "MAX_WITHDRAWAL_AMOUNT_OUTSIDE_CONSTRAINTS",
            "ACCOUNT_HOLDER_KEY_INVALID",
            "ACCOUNT_HOLDER_TYPE_INVALID",
            "INVALID_WITHHOLDING_TAX_SOURCE_KEY",
            "INTEREST_RATE_OUTSIDE_CONSTRAINTS",
            "INVALID_INTEREST_PAYMENT_POINT",
            "INVALID_INTEREST_PAYMENT_DATES",
            "REQUIRED_OVERDRAFT_INTEREST_RATE",
            "REQUIRED_OVERDRAFT_EXPIRY_DATE",
            "REQUIRED_OVERDRAFT_LIMIT",
            "DEPOSIT_ACCOUNT_FIELD_NOT_EDITABLE",
            "DEPOSIT_PRODUCT_MISMATCH",
            "ACCOUNT_TYPE_DOES_NOT_ALLOW_RECOMMENDED_DEPOSIT_AMOUNT",
            "ACCOUNT_TYPE_DOES_NOT_ALLOW_MAX_WITHDRAWAL_AMOUNT",
            "ACCOUNT_TYPE_DOES_NOT_ALLOW_TARGET_AMOUNT",
            "REQUIRED_INTEREST_RATE",
            "INTEREST_RATE_SHOULD_BE_NULL",
            "OVERDRAFT_INTEREST_RATE_SHOULD_BE_NULL",
            "OVERDRAFT_INTEREST_SPREAD_SHOULD_BE_NULL",
            "INVALID_ACCOUNT_TYPE",
            "INVALID_ACCOUNT_KEY",
            "UNABLE_TO_RECALCULATE_SCHEDULE",
            "UNABLE_TO_APPRAISE_LOAN_ACCOUNT",
            "TRANSACTION_MADE_BY_A_DISBURSEMENT_FEE",
            "INVALID_TARGET_ACCOUNT_TYPE",
            "NEGATIVE_TARGET_ACCOUNT_BALANCE",
            "ZERO_DISBURSE_AMOUNT",
            "INVESTOR_FUNDED_LOAN_ACCOUNT",
            "INVALID_TARGET_ACCOUNT_HOLDER_KEY",
            "TRANSFER_NOTES_LENGTH_EXCEEDS_MAXIMUM_SIZE",
            "CANNOT_MAKE_TRANSFER_FOR_FOREIGN_CURRENCY_IF_ACCOUNTING_ENABLED",
            "INVALID_AMORTIZATION_PROFILE",
            "AMORTIZATION_PROFILE_NOT_ALLOWED",
            "INVALID_AMORTIZATION_FREQUENCY",
            "INVALID_AMORTIZATION_FREQUENCY_CUSTOM_INTERVAL_PERIOD_COUNT",
            "INVALID_AMORTIZATION_SETTINGS",
            "AMORTIZATION_FREQUENCY_CUSTOM_INTERVAL_TOTAL_STEPS_NOT_ALLOWED",
            "AMORTIZATION_FREQUENCY_CUSTOM_INTERVAL_PERIOD_UNIT_NOT_ALLOWED",
            "AMORTIZATION_FREQUENCY_CUSTOM_INTERVAL_PERIOD_COUNT_NOT_ALLOWED",
            "INVALID_AMORTIZATION_FREQUENCY_CUSTOM_INTERVAL_TOTAL_STEPS",
            "INVALID_AMORTIZATION_FREQUENCY_CUSTOM_INTERVAL_PERIOD_UNIT",
            "AMORTIZATION_SETTINGS_NOT_ALLOWED",
            "INVALID_INTEREST_RATE_TERMS",
            "TRANSACTION_DISBURSEMENT_DATE_DOES_NOT_MATCH_WITH_TRANCH_EXPECTED_DATE",
            "DUPLICATE_TRANSACTION_CHANNEL_NAME",
            "DUPLICATE_TRANSACTION_CHANNEL_ID",
            "TRANSACTION_CHANNEL_ID_CONTAINS_SPACES",
            "INVALID_TRANSACTION_CHANNEL_LOAN_CONSTRAINTS",
            "INVALID_TRANSACTION_CHANNEL_SAVINGS_CONSTRAINTS",
            "INVALID_TRANSACTION_CHANNEL_ACCOUNT_USAGE",
            "CANNOT_DELETE_DEFAULT_TRANSACTION_CHANNEL",
            "TRANSACTION_CHANNEL_IN_USE",
            "TRANSACTION_CHANNEL_CANNOT_BE_DEACTIVATED",
            "INCONSISTENT_TRANSACTION_USER_KEY_WITH_ACCOUNT_USER",
            "INCONSISTENCY_BETWEEN_CHANNEL_KEY_AND_ID",
            "INCONSISTENT_TRANSACTION_PRODUCT_KEY_WITH_ACCOUNT_PRODUCT",
            "DUPLICATE_ID",
            "DUPLICATE_NAME",
            "ID_CONTAINS_SPACES",
            "INVALID_EXTERNAL_ID",
            "EXTERNAL_ID_ALREADY_EXISTS",
            "INVALID_ASSIGNMENT_FROM_NO_MEETING_DAY",
            "HOLDER_HAS_ACCOUNTS_IN_DIFFERENT_BRANCH_WITH_CENTRE_OR_CREDITOFFICER_MISMATCH",
            "ACCOUNT_ALREADY_DISBURSED",
            "ACCOUNT_APPROVED_AMOUNT_HAS_BEEN_EXCEEDED",
            "AMORTIZATION_FREQUENCY_INTERVAL_TYPE_NOT_ALLOWED",
            "AMORTIZATION_FREQUENCY_INTERVAL_COUNT_NOT_ALLOWED",
            "INVALID_AMORTIZATION_FREQUENCY_INTERVAL_TYPE",
            "INVALID_AMORTIZATION_FREQUENCY_PREDEFINED_INTERVALS_UNIT",
            "NON_POSITIVE_DEFAULT_INTEREST_RATE",
            "NON_POSITIVE_MIN_INTEREST_RATE",
            "NON_POSITIVE_MAX_INTEREST_RATE",
            "INVALID_INTEREST_RATE_MIN_MAX_DEFAULT_TUPLE",
            "DEFAULT_MIN_MAX_NOT_AVAILABLE",
            "INTEREST_RATE_TERMS_ARE_READONLY",
            "INTEREST_CALCULATION_BALANCE_METHOD_READONLY",
            "INTEREST_CALCULATION_BALANCE_METHOD_NOT_ALLOWED",
            "INTERNAL_TRANSFER_CANNOT_USE_CUSTOM_FIELDS",
            "INCONSISTENT_FEE_CALCULATION_METHOD_WITH_INCLUDE_FEE_IN_FLOOR_AMOUNT_OPTION_ENABLED",
            "INCONSISTENT_FEE_CALCULATION_METHOD_WITH_TOTAL_BALANCE_OPTION_ENABLED",
            "INCONSISTENT_LATE_REPAYMENT_FEE_TRIGGER_WITH_TOTAL_BALANCE_OPTION_ENABLED",
            "INACTIVE_ACCOUNT_BRANCH",
            "INCONSISTENT_ACCOUNT_BRANCH_ASSOCIATION_CENTRE_OR_CREDITOFFICER_MISMATCH",
            "INVALID_ACCOUNT_BRANCH_ASSIGNMENT_DUE_CENTRE_MEETING_DAY_MISMATCH",
            "CANNOT_CHANGE_LOAN_GROUP_BRANCH_FOR_A_SOLIDARITY_GROUP",
            "CANNOT_CHANGE_LOAN_ACCOUNT_BRANCH_WHEN_RESHEDULE_REFINANCE",
            "INVALID_FEE_APPLICATION",
            "INVALID_FEE_AMORTIZATION_UPON_RESCHEDULE_REFINANCE_OPTION",
            "FEE_AMORTIZATION_UPON_RESCHEDULE_REFINANCE_OPTION_IS_MANDATORY",
            "FEE_TRIGGER_NOT_ALLOWED",
            "NOT_ADJUSTED_TRANSACTION_LOGGED_AFTER_CURRENT_ONE",
            "CANNOT_ADJUST_INTEREST_ON_DISBURSEMENT",
            "TRANSACTION_TYPE_DOES_NOT_ALLOW_ADJUSTMENT",
            "TRANSACTION_ALREADY_ADJUSTED",
            "PAYMENT_DUE_FEES_ON_DUE_DATES_TRIGGER_NOT_ALLOWED",
            "DEPOSIT_INTEREST_FEATURE_DISABLED",
            "CANNOT_CREATE_NEW_USER_IN_FEDERATED_CONTEXT",
            "EMPTY_CUSTOM_FIELD_ID",
            "ACCOUNT_ALREADY_CLOSED",
            "INVALID_GUARANTEE_TYPE",
            "ORIGINAL_ACCOUNT_NOT_FOUND",
            "INVALID_ORIGINAL_ACCOUNT_STATE",
            "INCONSISTENT_AMORTIZATION_ACCOUNTING_SETUP",
            "PAYMENT_DUE_FEES_ON_DUE_DATES_NOT_ALLOWED_AT_RESCHEDULE_REFINANCE",
            "TAXES_ON_PRODUCT_NOT_ALLOWED",
            "TAX_CALCULATION_METHOD_NOT_ALLOWED",
            "TAXES_NOT_EDITABLE",
            "CANNOT_APPLY_REPAYMENT_ON_ZERO_BALANCE_ACCOUNT",
            "LOCKED_BALANCE_NOT_ALLOWED",
            "INEXISTING_TOLERANCE_CALCULATION_METHOD",
            "ARREARS_TOLERANCE_DAY_OUTSIDE_CONSTRAINTS",
            "INCONSISTENT_ARREARS_TOLERANCE_VALUES_WITH_ARREARS_TOLERANCE_METHOD",
            "SAVINGS_PRODUCT_DOES_NOT_ALLOW_OFFSET_LINKING",
            "INVALID_SETTLEMENT_ACCOUNT_KEY",
            "INVALID_SETTLEMENT_ACCOUNT_STATE",
            "INVALID_DATA_MIGRATION_EVENT_KEY",
            "ANOTHER_TASK_IN_PROGRESS",
            "INVALID_DATA_IMPORT_TASK_KEY",
            "DEPOSIT_ACCOUNT_LINKED_TO_LOAN_ACCOUNTS_ON_DIFFERENT_BRANCHES",
            "SAVINGS_ACCOUNT_LINKED_TO_LOAN_ACCOUNTS_ON_DIFFERENT_BRANCHES",
            "INVALID_DEPOSIT_ACCOUNT_HOLDER",
            "UNLINKABLE_DEPOSIT_PRODUCT",
            "INEXISTING_DATE_CALCULATION_METHOD",
            "INEXISTING_NON_WORKING_DAYS_METHOD",
            "MESSAGE_SENDING_ERROR",
            "CONNECTION_CLOSING_ERROR",
            "CONSUMER_SERVICE_STARTING_ERROR",
            "CONSUMER_SERVICE_ALREADY_STARTED",
            "CONSUMER_UNSUBSCRIPTION_FAILED",
            "CONSUMER_SUBSCRIPTION_FAILED",
            "INVALID_SUPPORT_ROLE_ASSOCIATION",
            "INVALID_SUPPORT_ROLE_NAME",
            "INVALID_SUPPORT_ROLE_USER_RIGHTS",
            "INVALID_SUPPORT_ROLE_PERMISSIONS",
            "LOAN_ACCOUNT_FIELD_NOT_EDITABLE",
            "INCOMPATIBLE_ARREARS_TOLERANCE_METHOD_AND_PRODUCT_TYPE",
            "TRANSACTION_CHANNEL_NOT_ALLOWED_WHEN_DISBURSE_TO_DEPOSIT",
            "INVALID_TARGET_ACCOUNT_STATE_FOR_DEPOSIT",
            "FEE_AMOUNT_ALREADY_DEFINED_IN_PRODUCT",
            "MANDATORY_FEE_AMOUNT",
            "INVALID_SORTING_SELECTION",
            "BLACKLISTED_CLIENT_NOT_EDITABLE",
            "INVALID_STRING_VALUE",
            "NOTIFICATION_STATE_IS_REQUIRED",
            "NOTIFICATION_EVENT_MESSAGE_IS_REQUIRED",
            "INSTALLMENT_NUMBER_MANDATORY_FOR_FIXED_ACCOUNTS",
            "CLIENT_ID_ANONYMIZATION_ERROR",
            "INSTALLMENT_NUMBER_NOT_ALLOWED_FOR_DYNAMIC_ACCOUNTS",
            "INVALID_INSTALLMENT_NUMBER",
            "CANNOT_APPLY_FEE_ON_PAID_INSTALLMENT",
            "MANDATORY_ACCOUNT_HOLDER_TYPE",
            "CLIENT_DOES_NOT_HAVE_EXITED_STATE",
            "UNSUBSCRIBE_CLIENT_FROM_NOTIFICATIONS_ERROR",
            "CLIENT_PERSONAL_INFORMATION_ANONYMIZATION_ERROR",
            "CLIENT_LOAN_ACCOUNTS_ANONYMIZATION_ERROR",
            "CLIENT_SAVINGS_ACCOUNTS_ANONYMIZATION_ERROR",
            "CLIENT_LINES_OF_CREDIT_ANONYMIZATION_ERROR",
            "CLIENT_GUARANTEES_ANONYMIZATION_ERROR",
            "CLIENT_NOTIFICATION_MESSAGES_ANONYMIZATION_ERROR",
            "CLIENT_ASSOCIATED_TASKS_ANONYMIZATION_ERROR",
            "INVALID_API_KEY",
            "API_KEY_REFRESH_ERROR",
            "FILE_NOT_FOUND",
            "UPLOADED_FILE_NOT_FOUND",
            "MISSING_CLIENT_ROLE",
            "BACKGROUND_PROCESS_STATE_IS_REQUIRED",
            "BACKGROUND_PROCESS_STATE_CANNOT_BE_IN_PROGRESS",
            "NOT_ALLOWED_TO_CREATE_REOPEN_ACCOUNTS_WITH_RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT",
            "NOT_ALLOWED_TO_CREATE_REOPEN_ACCOUNTS_WITH_DEPRECATED_REDUCE_NUMBER_OF_INSTALLMENTS",
            "NOT_ALLOWED_TO_REOPEN_REVOLVING_ACCOUNTS_WITHOUT_KEEP_EMPTY_INSTALLMENTS_SCHEDULE",
            "FEATURE_NOT_ENABLED",
            "AUTOMATIC_END_OF_DAY_PROCESSING",
            "ACCOUNT_NOT_ACTIVE",
            "DUPLICATE_ENTRY_FOR_CUSTOM_FIELD_VALUE",
            "ACCOUNT_ACTIVATION_FAILED",
            "INSUFFICIENT_AVAILABLE_AMOUNT_FOR_AUTHORIZATION_HOLD_ON_LOANS",
            "INVALID_MCC_EXPIRATION_ENTRY",
            "MCC_ALREADY_EXISTS",
            "MCC_EXPIRATION_ENTRY_NOT_FOUND",
            "PRODUCT_DISBURSEMENT_FEES_PREVENT_CARD_ATTACHMENT",
            "INVALID_API_CONSUMER_USERNAME",
            "YAML_PROCESSING_FAILED",
            "CARD_TRANSACTION_REVERSAL_CANNOT_BE_ADJUSTED",
            "DUPLICATE_CUSTOM_FIELD_SELECTION_ID",
            "INVALID_CREDIT_DEBIT_INDICATOR_FOR_OPERATION",
            "BLANK_INSTITUTION_NAME",
            "INSTITUTION_NAME_LENGTH",
            "BLANK_DECIMAL_SEPARATOR",
            "INVALID_DECIMAL_SEPARATOR",
            "BLANK_DATE",
            "INVALID_DATE_FORMAT",
            "HAS_INVALID_DATE_CHARACTER",
            "MISSING_REQUIRED_DATE_CHARACTER",
            "BLANK_DATE_TIME",
            "INVALID_DATE_TIME_FORMAT",
            "HAS_INVALID_DATE_TIME_CHARACTER",
            "MISSING_REQUIRED_DATE_TIME_CHARACTER",
            "INVALID_TERMINATION_DATE",
            "LOAN_ACCOUNT_ALREADY_FULLY_PAID",
            "TERMINATE_LOAN_ACCOUNT_FEATURE_DISABLED",
            "LATE_REPAYMENT_FEES_PRODUCT_NOT_ALLOWED",
            "LOAN_ACCOUNT_SCHEDULE_EDITING_NOT_ALLOWED",
            "AGGREGATOR_INSTALLMENT_ALREADY_HAS_CUSTOM_DUE_DATE",
            "TERMINATED_ACCOUNT_DOES_NOT_ALLOW_EDITING_AGGREGATOR_INSTALLMENT",
            "INVALID_SETUP_OF_LOAN_ACCOUNT_TO_TERMINATE",
            "LOAN_ACCOUNT_TERMINATION_AFTER_LAST_INSTALLMENT_DUE_DATE",
            "ROLE_ID_ALREADY_IN_USE",
            "INVALID_CHARACTERS_IN_ROLE_ID",
            "ROLE_NAME_ALREADY_IN_USE",
            "REMOVED_ADMIN_FOR_CURRENT_USER",
            "ADDED_ADMIN_FOR_CURRENT_USER",
            "REMOVED_MAMBU_ACCESS_RIGHT_FOR_CURRENT_USER",
            "MISSING_REQUIRED_BRANCH",
            "A_TELLER_CAN_SEE_ONLY_ONE_BRANCH",
            "CANNOT_REMOVE_TELLER_PROPERTY",
            "CANNOT_CHANGE_BRANCH_ASSIGNMENT",
            "CANNOT_DELETE_TELLER",
            "A_TELLER_CANNOT_BE_ADMINISTRATOR",
            "CREDIT_OFFICER_PROPERTY_REMOVED",
            "CREDIT_OFFICER_PROPERTY_REMOVED_FROM_ROLE",
            "USER_BRANCH_CHANGE",
            "USER_DEACTIVATED",
            "USER_DELETED",
            "SUPPORT_ROLE_CANNOT_BE_ASSIGNED_TO_AN_ADMINISTRATOR",
            "SUPPORT_ROLE_CANNOT_BE_ASSIGNED_TO_A_TELLER",
            "SUPPORT_ROLE_CANNOT_BE_ASSIGNED_TO_A_REGULAR_USER",
            "SUPPORT_ROLE_NAME_CANNOT_BE_CHANGED",
            "SUPPORT_ROLE_USER_RIGHTS_CANNOT_BE_CHANGED",
            "SUPPORT_ROLE_PERMISSIONS_MUST_BE_VIEW_ONLY",
            "INVALID_ROLE_NAME",
            "ROLES_CONFIGURATION_EMPTY",
            "INVALID_ROLE_ID",
            "ROLE_IN_USE",
            "SUPPORT_ROLE_CANNOT_BE_DELETED",
            "NULL_OR_EMPTY_ID",
            "MISSING_ROLE_NAME",
            "DELIVERY_ROLE_CANNOT_BE_DELETED",
            "DELIVERY_ROLE_NAME_CANNOT_BE_CHANGED",
            "DELIVERY_ROLE_USER_RIGHTS_CANNOT_BE_CHANGED",
            "DELIVERY_ROLE_CANNOT_BE_ASSIGNED_TO_A_REGULAR_USER",
            "DELIVERY_ROLE_CANNOT_BE_ASSIGNED_TO_AN_ADMINISTRATOR",
            "DELIVERY_ROLE_CANNOT_BE_ASSIGNED_TO_A_TELLER",
            "HYBRID_GROUP_NOT_AVAILABLE_FOR_DBEI_CAPITALIZED_INTEREST",
            "HYBRID_GROUP_NOT_AVAILABLE_WHEN_REDRAW_ENABLED",
            "PRODUCT_LINKING_NOT_AVAILABLE_WHEN_REDRAW_ENABLED",
            "FUNDING_SOURCES_NOT_AVAILABLE_WHEN_REDRAW_ENABLED",
            "TAXES_NOT_AVAILABLE_WHEN_REDRAW_ENABLED",
            "REDRAW_AND_OFFSET_SETTINGS_ENABLED_SIMULTANEOUSLY",
            "HYBRID_GROUP_NOT_AVAILABLE_FOR_OFFSET_LOAN",
            "INCONSISTENT_OFFSET_SETTINGS_WITH_PRODUCT_CONFIGURATION",
            "INCONSISTENT_OFFSET_SETTINGS_WITH_OFFSET_FEATURE",
            "PRODUCT_LINKING_IS_MANDATORY_WHEN_OFFSET_ENABLED",
            "LINKED_DEPOSIT_PRODUCT_DOES_NOT_ALLOW_OFFSET",
            "LINKED_DEPOSIT_PRODUCT_DOES_NOT_EXIST",
            "FUNDING_SOURCES_NOT_AVAILABLE_WHEN_OFFSET_ENABLED",
            "TAXES_NOT_AVAILABLE_WHEN_OFFSET_ENABLED",
            "ACCOUNT_HAS_POSITIVE_OR_ZERO_BALANCE",
            "ACCOUNT_DOES_NOT_ALLOW_OVERDRAFT",
            "INVALID_NOTES_LENGTH",
            "FEE_AMORTIZATION_PROFILE_CANNOT_BE_CHANGED",
            "FEE_AMORTIZATION_FREQUENCY_CANNOT_BE_CHANGED",
            "FEE_AMORTIZATION_PROFILE_IS_NOT_PROVIDED",
            "WITHDRAWAL_AMOUNT_GREATER_THAN_DUE_AMOUNT",
            "WITHDRAWAL_COVERING_LATE_REPAYMENTS_NOT_ALLOWED_WITHOUT_REDRAW_REPAYMENT",
            "INTEREST_RATE_CHANGED_TRANSACTION_NOT_ALLOWED_FOR_DEPOSIT_PRODUCT_SETTINGS",
            "INTEREST_RATE_CHANGED_NOT_ALLOWED_INTEREST_APPLIANCE_TRANSACTIONS_AFTER_VALUE_DATE",
            "BLOCKED_BALANCE_SHOULD_BE_ZERO_OR_NULL",
            "FORWARD_AVAILABLE_BALANCE_SHOULD_BE_ZERO_OR_NULL",
            "CUSTOM_FIELD_DEFAULT_SET_CANNOT_BE_MORE_THAN_ONE",
            "CUSTOM_FIELD_DEFAULT_SET_ID_CANNOT_BE_CHANGED",
            "CUSTOM_FIELD_DEFAULT_SET_NAME_CANNOT_BE_CHANGED",
            "CUSTOM_FIELD_DEFAULT_DESCRIPTION_CANNOT_BE_CHANGED",
            "CUSTOM_FIELD_DEFAULT_SET_TYPE_CANNOT_BE_CHANGED",
            "CUSTOM_FIELD_SET_BLANK_ID",
            "CUSTOM_FIELD_SET_INVALID_ID_LENGTH",
            "CUSTOM_FIELD_SET_INVALID_ID_FORMAT",
            "CUSTOM_FIELD_SET_MISSING_ID_PREFIX",
            "CUSTOM_FIELD_SET_DUPLICATE_ID",
            "CUSTOM_FIELD_SET_ID_RESERVED_KEYWORD",
            "CUSTOM_FIELD_SET_BLANK_NAME",
            "CUSTOM_FIELD_SET_NAME_LENGTH",
            "CUSTOM_FIELD_SET_DUPLICATE_NAME",
            "CUSTOM_FIELD_SET_TYPE_REQUIRED",
            "CUSTOM_FIELD_SET_TYPE_CANNOT_BE_CHANGED",
            "CUSTOM_FIELD_SET_AVAILABLE_FOR_REQUIRED",
            "CUSTOM_FIELD_SET_AVAILABLE_FOR_CANNOT_BE_CHANGED",
            "CUSTOM_FIELD_BLANK_ID",
            "CUSTOM_FIELD_INVALID_ID_LENGTH",
            "CUSTOM_FIELD_INVALID_ID_FORMAT",
            "CUSTOM_FIELD_DUPLICATE_ID",
            "CUSTOM_FIELD_RESERVED_ID",
            "CUSTOM_FIELD_BLANK_NAME",
            "CUSTOM_FIELD_NAME_LENGTH",
            "CUSTOM_FIELD_DUPLICATE_NAME",
            "CUSTOM_FIELD_DEPENDENT_INVALID_TYPE_FOR_FIELD_WITH_DEPENDENT_FIELD",
            "CUSTOM_FIELD_DEPENDENT_FIELD_DOES_NOT_EXIST_IN_SET",
            "CUSTOM_FIELD_DEPENDENT_INVALID_TYPE_FOR_THE_DEPENDENT_FIELD",
            "CUSTOM_FIELD_SELECTIONS_OPTION_CANNOT_BE_DELETED",
            "CUSTOM_FIELD_SELECTIONS_FOR_SELECTION_ID_PRESENT_BUT_NO_DEPENDENT_FIELD",
            "CUSTOM_FIELD_SELECTIONS_DEPENDENT_FIELD_PRESENT_BUT_FOR_SELECTION_IS_MISSING",
            "CUSTOM_FIELD_SELECTIONS_FOR_SELECTION_ID_COULD_NOT_BE_FOUND_IN_THE_DEPENDENT_FIELD",
            "CUSTOM_FIELD_SELECTIONS_DUPLICATED_SELECTION_IDS",
            "CUSTOM_FIELD_SELECTIONS_SELECTION_ID_SHOULD_NOT_BE_EMPTY",
            "CUSTOM_FIELD_SELECTIONS_SELECTION_ID_CONTAINS_INVALID_CHARACTERS",
            "CUSTOM_FIELD_SELECTIONS_INVALID_SCORE_NUMBER",
            "CUSTOM_FIELD_SELECTIONS_DEPENDENT_FIELD_OPTIONS_NOT_COVERED",
            "CUSTOM_FIELD_SELECTIONS_DUPLICATE_OPTION_VALUES",
            "CUSTOM_FIELD_SELECTIONS_VALUE_CANNOT_BE_EMPTY",
            "CUSTOM_FIELD_SELECTIONS_CIRCULAR_DEPENDENCY",
            "CUSTOM_FIELD_SELECTION_OPTIONS_ARE_REQUIRED",
            "CUSTOM_FIELD_ACCESS_RIGHTS_INVALID_ROLE_ID",
            "CUSTOM_FIELD_SUPPORT_ROLE_INVALID_RIGHTS",
            "CUSTOM_FIELD_BLANK_ROLE_ID",
            "CUSTOM_FIELD_USAGE_BLANK_ID",
            "CUSTOM_FIELD_USAGE_ID_NOT_FOUND",
            "CUSTOM_FIELD_INVALID_USAGE_FOR_RECORD_TYPE",
            "CUSTOM_FIELD_INVALID_USAGE_FOR_FIELD",
            "CUSTOM_FIELD_USAGE_FOR_RECORD_TYPE_NOT_ALLOWED",
            "CUSTOM_FIELD_USAGE_FOR_RECORD_TYPE_REQUIRED",
            "CUSTOM_FIELD_SELECTION_USAGE_NOT_ALLOWED",
            "CUSTOM_FIELD_SELECTION_REQUIRED_NOT_ALLOWED",
            "CUSTOM_FIELD_SELECTION_DEFAULT_NOT_ALLOWED",
            "CUSTOM_FIELD_BLANK_TYPE",
            "CUSTOM_FIELD_TYPE_CHANGED",
            "CUSTOM_FIELD_VALIDATION_RULES_NOT_ALLOWED",
            "CUSTOM_FIELD_VALIDATION_RULES_DUPLICATE_VALUES",
            "CUSTOM_FIELD_STATE_REQUIRED",
            "CUSTOM_FIELD_DISPLAY_SETTINGS_REQUIRED",
            "CUSTOM_FIELD_DESCRIPTION_LENGTH_EXCEEDED",
            "CUSTOM_FIELD_SIZE_REQUIRED",
            "CUSTOM_FIELD_SET_BUILT_IN_USAGE",
            "CUSTOM_FIELD_DUPLICATE_USAGE_ID",
            "CUSTOM_FIELD_DUPLICATE_ROLE_ID",
            "CUSTOM_FIELD_ACCESS_RIGHTS_REQUIRED",
            "CUSTOM_FIELD_ACCESS_RIGHTS_ROLES_REQUIRED",
            "CUSTOM_FIELD_ACCESS_RIGHTS_ALL_USERS_REQUIRED",
            "CUSTOM_FIELD_ACCESS_RIGHTS_ALL_USERS_FALSE_WHEN_ROLES_SPECIFIED",
            "CUSTOM_FIELD_SELECTION_OPTIONS_NULL",
            "CUSTOM_FIELD_AVAILABLE_OPTIONS_NULL",
            "CUSTOM_FIELD_NULL_USAGE",
            "CUSTOM_FIELD_SET_NULL_FIELD",
            "CUSTOM_FIELDS_CONFIGURATION_EMPTY",
            "CUSTOM_FIELD_SET_NULL_ENTRY",
            "CONFIGURATION_AS_CODE_UPDATE_IN_PROGRESS",
            "CONFIGURATION_AS_CODE_FEATURE_DISABLED",
            "PREPAYMENT_RECALCULATION_METHOD_ON_REPAYMENT_NOT_ALLOWED_FOR_LOAN_ACCOUNT",
            "PREPAYMENT_RECALCULATION_METHOD_ON_REPAYMENT_NOT_SUPPORTED",
            "CONFLICT_BETWEEN_EDIT_SCHEDULE_OPERATIONS_AND_ATTEMPTED_PREPAYMENT_RECALCULATION_METHOD",
            "CONFLICT_BETWEEN_PREPAYMENT_RECALCULATION_METHOD_FROM_TRANSACTIONS_AND_NEW_SCHEDULE_EDIT",
            "EDITING_INSTALLMENTS_DUE_BEFORE_LAST_PAID_INSTALLMENT_IS_NOT_ALLOWED",
            "INVALID_INSTALLMENT_KEY",
            "INVALID_REPAYMENT_AMOUNT_FOR_SPECIFIC_INSTALLMENT",
            "SPECIFIC_INSTALLMENT_REPAYMENTS_NOT_ALLOWED_IF_GENERIC_REPAYMENTS_EXIST",
            "GENERIC_REPAYMENTS_NOT_ALLOWED_IF_SPECIFIC_INSTALLMENT_REPAYMENTS_EXIST",
            "INSTALLMENT_ALREADY_PAID",
            "PREPAYMENT_RECALCULATION_METHOD_NOT_SUPPORTED",
            "ONLY_IOI_METHOD_SUPPORTED",
            "ACCRUE_LATE_INTEREST_NOT_SUPPORTED",
            "ONLY_PARTIALLY_PAID_STATUS_SUPPORTED",
            "ONLY_NO_PENALTY_PRODUCTS_SUPPORTED",
            "ACCOUNT_IS_LOCKED",
            "ONLY_STANDARD_PAYMENTS_SUPPORTED",
            "ARBITRARY_FEES_NOT_SUPPORTED",
            "TAXES_ON_INTEREST_NOT_SUPPORTED",
            "REPAYMENT_DUE_DATE_DUPLICATED",
            "TAXES_ON_FEE_NOT_SUPPORTED",
            "CHANGING_NO_OF_POSITIVE_PRINCIPAL_INSTALLMENTS_NOT_ALLOWED",
            "INSTALLMENTS_ADJUSTMENT_DETAILS_NOT_EXPECTED",
            "INSTALLMENTS_ADJUSTMENT_DETAILS_NOT_EXPECTED_BULK",
            "INSTALLMENTS_ADJUSTMENT_DETAILS_MISSING",
            "INSTALLMENT_NOT_FOUND",
            "INSTALLMENT_DUPLICATED",
            "INSTALLMENT_STATE_NOT_ALLOWED",
            "NOT_ALLOWED_FOR_CURRENT_ACCOUNT_TYPE",
            "NOT_ALLOWED_BEFORE_ACTIVATION_DATE",
            "NOT_ALLOWED_BEFORE_OR_DURING_PAID_INSTALLMENT",
            "GET_NOTIFICATION_MESSAGE_UPDATE_FAILURE",
            "INVALID_CUSTOM_FILTER_CONSTRAINT_OPERATOR",
            "EMPTY_CUSTOM_FILTER_CONSTRAINT_VALUE",
            "INVALID_CUSTOM_FILTER_CONSTRAINT_VALUE",
            "INVALID_CUSTOM_FILTER_CONSTRAINT_OPERATOR_USAGE",
            "EMPTY_TRANSACTION_CHANNEL_NAME",
            "EMPTY_TRANSACTION_CHANNEL_ID",
            "INVALID_CUSTOM_FILTER_CONSTRAINT_TYPE",
            "INVALID_CUSTOM_FILTER_USAGE",
            "INVALID_CUSTOM_FILTER_CRITERIA",
            "INTEREST_ACCRUAL_BREAKDOWN_INTERNAL_ERROR",
            "INTEREST_ACCRUAL_BREAKDOWN_BAD_REQUEST",
            "DUPLICATE_BLOCK_ID",
            "INVALID_BLOCK_FUND_STATE",
            "BLOCK_FUND_DOES_NOT_EXIST",
            "S3_REGION_NOT_FOUND",
            "INVALID_TRANSACTION_CHANNEL_ID",
            "INVALID_ACCOUNTING_METHOD",
            "MISSING_RULE",
            "NOT_REQUIRED_RULE",
            "HEADER_ACCOUNT_NOT_ALLOWED",
            "INVALID_GLACCOUNT_TYPE",
            "RULE_WITHOUT_GLACCOUNT",
            "INVALID_INTEREST_ACCRUED_METHOD",
            "GLACCOUNTS_ARE_NOT_IN_ORGANIZATION_OR_PRODUCT_CURRENCY",
            "INCONSISTENT_GLACCOUNTS_CURRENCY_SETUP",
            "INCONSISTENT_FEE_GLACCOUNTS_CURRENCY_SETUP",
            "INVALID_GL_ACCOUNT_CURRENCY",
            "CANNOT_EDIT_GL_ACCOUNT_CURRENCY_AS_ACCOUNT_IS_IN_USE",
            "FOREIGN_CURRENCY_IS_NOT_ALLOWED",
            "INEXISTING_GLACCOUNT",
            "GLACCOUNTS_ARE_NOT_IN_PRODUCT_CURRENCY",
            "CHANGE_ARREARS_SETTINGS_NOT_ALLOWED_FOR_PRODUCT_TOLERANCE_CALCULATION_METHOD",
            "INVALID_BULK_PROCESS_KEY",
            "BULK_API_REQUEST_SIZE_LIMIT_REACHED",
            "POSITIVE_AMOUNT_REQUIRED",
            "ID_NOT_UNIQUE",
            "ENCODED_KEY_NOT_FOUND",
            "CHANGE_MONTHLY_REPAYMENT_DAY_NOT_ALLOWED_FOR_ACCOUNTS_WITH_CUSTOM_SCHEDULE",
            "CHANGE_MONTHLY_REPAYMENT_DAY_ALLOWED_ONLY_FOR_ACCOUNTS_WITH_A_SINGLE_FIXED_DAY_OF_MONTH",
            "INVALID_INTEREST_ROUNDING_VERSION",
            "MAXIMUM_DEPOSIT_BALANCE_EXCEEDED",
            "MAXIMUM_DEPOSIT_BALANCE_FEATURE_DISABLED",
            "MAX_DEPOSIT_BALANCE_NOT_AVAILABLE_FOR_INVESTOR_ACCOUNTS",
            "BRANCHES_CONFIGURATION_EMPTY",
            "NULL_BRANCH_ENTRY",
            "BRANCH_NAME_LENGTH",
            "BLANK_BRANCH_NAME",
            "BRANCH_ID_LENGTH",
            "BLANK_BRANCH_ID",
            "DUPLICATE_BRANCH_ID",
            "BRANCH_EMAIL_FORMAT",
            "BRANCH_EMAIL_LENGTH",
            "BRANCH_PHONE_LENGTH",
            "BLANK_HOLIDAY_ID",
            "INVALID_HOLIDAY_ID",
            "DUPLICATE_HOLIDAY_ID",
            "BLANK_HOLIDAY_NAME",
            "HOLIDAY_NAME_LENGTH",
            "HOLIDAY_DAY_OF_MONTH_ERROR",
            "HOLIDAY_MONTH_OF_YEAR_ERROR",
            "HOLIDAY_YEAR_ERROR",
            "HOLIDAY_VALID_DATE_ERROR",
            "CANNOT_DEACTIVATE_BRANCH",
            "CENTRE_CONFIGURATION_EMPTY",
            "CENTRE_ID_LENGTH",
            "BLANK_CENTRE_ID",
            "DUPLICATE_CENTRE_ID",
            "CENTRE_NAME_LENGTH",
            "BLANK_CENTRE_NAME",
            "INVALID_CENTRE_MEETING_DAY",
            "BLANK_CENTRE_BRANCH_ID",
            "BRANCH_IS_INACTIVE",
            "BRANCH_DOES_NOT_EXIST",
            "CENTRE_STATE_BLANK",
            "NULL_CENTRE_ENTRY",
            "ADDRESS_FIELD_LENGTH",
            "CF_SET_ID_ERROR",
            "CF_SET_INVALID_ID",
            "CF_SET_DUPLICATE_ID",
            "CF_GROUPED_SET_EMPTY_ERROR",
            "CF_GROUPED_SET_INDEX_DUPLICATE_ERROR",
            "CF_STANDARD_VALUES_DEFINED_FOR_GROUPED_SET_ERROR",
            "CF_GROUPED_VALUES_DEFINED_FOR_STANDARD_SET_ERROR",
            "CF_GROUPED_SET_CF_ID_DUPLICATE_ERROR",
            "CF_STANDARD_SET_CF_ID_DUPLICATE_ERROR",
            "CUSTOM_FIELD_ID_BLANK_ERROR",
            "CUSTOM_FIELD_ID_INVALID_ERROR",
            "CF_VALUE_CHECKBOX_TYPE_INVALID_ERROR",
            "CF_VALUE_CLIENT_LINK_TYPE_INVALID_ERROR",
            "CF_VALUE_DATE_TYPE_INVALID_ERROR",
            "CF_VALUE_GROUP_LINK_TYPE_INVALID_ERROR",
            "CF_VALUE_NUMBER_TYPE_INVALID_ERROR",
            "CF_VALUE_SELECTION_TYPE_INVALID_ERROR",
            "CF_VALUE_USER_LINK_TYPE_INVALID_ERROR",
            "CF_VALUES_EMPTY_ERROR",
            "CF_GROUPED_SET_NULL_INDEX_ERROR",
            "CF_GROUPED_SET_INDEX_UNORDERED_ERROR",
            "DUPLICATE_NON_WORKING_DAYS",
            "INVALID_GENERAL_HOLIDAY_IDENTIFIER",
            "INVALID_YAML_SYNTAX"
          ]
        }
      }
    },
    "ApplyInterestInput": {
      "type": "object",
      "required": [
        "interestApplicationDate"
      ],
      "properties": {
        "paymentHolidaysInterestAmount": {
          "type": "number",
          "description": "The amount of the Payment Holidays interest to apply"
        },
        "interestApplicationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date up to which interest is to be posted"
        },
        "notes": {
          "type": "string",
          "description": "Additional information for this action"
        },
        "isPaymentHolidaysInterest": {
          "type": "boolean",
          "description": "Whether the interest amount to apply should be the regular one or the one accrued during the Payment Holidays. If nothing specified it will be the regular one."
        }
      },
      "description": "Represents a request for applying the accrued interest "
    },
    "DisbursementDetails": {
      "type": "object",
      "properties": {
        "transactionDetails": {
          "description": "The input details for the disbursement transaction",
          "$ref": "#/definitions/LoanTransactionDetails"
        },
        "expectedDisbursementDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date of the expected disbursement.Stored as Organization Time."
        },
        "fees": {
          "type": "array",
          "description": "List of fees that should be applied at the disbursement time.",
          "items": {
            "$ref": "#/definitions/CustomPredefinedFee"
          }
        },
        "firstRepaymentDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date of the expected first repayment. Stored as Organization Time."
        },
        "disbursementDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The activation date, the date when the disbursement actually took place."
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the disbursement details, auto generated, unique",
          "readOnly": true
        }
      },
      "description": "The the disbursement details it holds the information related to the disbursement details as disbursement date, first repayment date, disbursement fees."
    },
    "PatchOperation": {
      "type": "object",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "op": {
          "type": "string",
          "description": "The change to perform",
          "enum": [
            "ADD",
            "REPLACE",
            "REMOVE",
            "MOVE"
          ]
        },
        "path": {
          "type": "string",
          "description": "The field to perform the operation on"
        },
        "from": {
          "type": "string",
          "description": "The field from where a value should be moved, when using move"
        },
        "value": {
          "type": "object",
          "description": "The value of the field, can be null"
        }
      },
      "description": "A single change that needs to be made to a resource"
    },
    "InstallmentAllocationElementAmount": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "The installment allocation element amount.",
          "$ref": "#/definitions/Amount"
        }
      },
      "description": "Represents an installment allocation element amount structure."
    },
    "DepositAccountDocument": {
      "type": "object"
    },
    "DepositTransactionInterestSettings": {
      "type": "object",
      "properties": {
        "interestRate": {
          "type": "number",
          "description": "The interest rate for the deposit account"
        }
      },
      "description": "The interest settings, holds all the properties regarding interests for the deposit account"
    },
    "Installment": {
      "type": "object",
      "properties": {
        "principal": {
          "description": "The original loan amount that is disbursed, excluding interest, fees and penalties.",
          "$ref": "#/definitions/InstallmentAllocationElementAmount"
        },
        "number": {
          "type": "string",
          "description": "The order number of an installment among all the installments generated for a loan. Loan installments are put in ascending order by due date."
        },
        "lastPaidDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The installment last paid date."
        },
        "parentAccountKey": {
          "type": "string",
          "description": "The parent account key of the installment"
        },
        "interest": {
          "description": "The interest amount that is charged for the use of the loan.",
          "$ref": "#/definitions/InstallmentAllocationElementTaxableAmount"
        },
        "penalty": {
          "description": "The penalty amount that can be charged for the loan account.",
          "$ref": "#/definitions/InstallmentAllocationElementTaxableAmount"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The installment due date."
        },
        "fee": {
          "description": "The fee amount that may be applied to the loan account.",
          "$ref": "#/definitions/InstallmentAllocationElementTaxableAmount"
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the installment, auto generated, unique.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "The installment state.",
          "enum": [
            "PENDING",
            "LATE",
            "PAID",
            "PARTIALLY_PAID",
            "GRACE"
          ]
        },
        "repaidDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The installment repaid date."
        }
      },
      "description": "Represents a single installment details structure."
    },
    "DepositAccountOverdraftInterestRateSettings": {
      "type": "object",
      "properties": {
        "interestRate": {
          "type": "number",
          "description": "The interest rate for the deposit account"
        },
        "interestSpread": {
          "type": "number",
          "description": "The rate based on which the interest is accrued and applied for accounts with InterestRateSource#INDEX_INTEREST_RATE"
        },
        "interestRateReviewUnit": {
          "type": "string",
          "description": "The interest rate review frequency measurement unit",
          "enum": [
            "DAYS",
            "WEEKS",
            "MONTHS"
          ]
        },
        "interestRateSource": {
          "type": "string",
          "description": "The interest rate source. Represents the interest calculation method",
          "readOnly": true,
          "enum": [
            "FIXED_INTEREST_RATE",
            "INDEX_INTEREST_RATE"
          ]
        },
        "interestRateReviewCount": {
          "type": "integer",
          "format": "int32",
          "description": "The interest rate review frequency unit count"
        },
        "interestRateTiers": {
          "type": "array",
          "description": "The list of interest rate tiers. An interest rate tier holds the values to define how the interest is computed",
          "items": {
            "$ref": "#/definitions/DepositAccountInterestRateTier"
          }
        },
        "interestChargeFrequency": {
          "type": "string",
          "description": "The interest change frequency. Holds the possible values for how often is interest charged on loan or deposit accounts",
          "enum": [
            "ANNUALIZED",
            "EVERY_MONTH",
            "EVERY_FOUR_WEEKS",
            "EVERY_WEEK",
            "EVERY_DAY",
            "EVERY_X_DAYS"
          ]
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded for this set of interest settings, auto generated, unique",
          "readOnly": true
        },
        "interestChargeFrequencyCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of units to apply over the interval (e.g. [x] weeks)"
        },
        "interestRateTerms": {
          "type": "string",
          "description": "How is the interest rate determined when being accrued for an account",
          "enum": [
            "FIXED",
            "TIERED",
            "TIERED_PERIOD",
            "TIERED_BAND"
          ]
        }
      },
      "description": "Overdraft interest rate settings for deposit accounts"
    },
    "LoanTransactionDetails": {
      "type": "object",
      "properties": {
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the entity, generated, globally unique",
          "readOnly": true
        },
        "internalTransfer": {
          "type": "boolean",
          "description": "Whether the transaction was transferred between loans or deposit accounts"
        },
        "transactionChannelKey": {
          "type": "string",
          "description": "The encoded key of the transaction channel associated with the transaction details."
        },
        "transactionChannelId": {
          "type": "string",
          "description": "The id of the transaction channel associated with the transaction details."
        },
        "targetDepositAccountKey": {
          "type": "string",
          "description": "In case of a transaction to a deposit account this represent the deposit account key to which the transaction was made."
        }
      },
      "description": "Contains the details about the loan transaction including fields like encoded key, transaction channel key and channel id."
    },
    "Amount": {
      "type": "object",
      "properties": {
        "paid": {
          "type": "number",
          "description": "The paid amount."
        },
        "due": {
          "type": "number",
          "description": "The due amount."
        },
        "expected": {
          "type": "number",
          "description": "The expected amount, which is sum of paid and due amounts."
        }
      },
      "description": "Represents a simple installment amount structure."
    },
    "Fee": {
      "type": "object",
      "required": [
        "predefinedFeeKey"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the predefined fee",
          "readOnly": true
        },
        "amount": {
          "type": "number",
          "description": "The amount of the fee that was applied/paid in the transaction for the given predefined fee."
        },
        "trigger": {
          "type": "string",
          "description": "Shows the event that will trigger a fee",
          "readOnly": true,
          "enum": [
            "MANUAL",
            "DISBURSEMENT",
            "CAPITALIZED_DISBURSEMENT",
            "UPFRONT_DISBURSEMENT",
            "LATE_REPAYMENT",
            "MONTHLY_FEE",
            "PAYMENT_DUE",
            "PAYMENT_DUE_APPLIED_ON_DUE_DATES",
            "ARBITRARY"
          ]
        },
        "taxAmount": {
          "type": "number",
          "description": "The amount of the taxes on fee that was applied/paid in the transaction."
        },
        "predefinedFeeKey": {
          "type": "string",
          "description": "The encoded key of the predefined fee, auto generated, unique"
        }
      },
      "description": "An amount of predefined fee that was applied or paid on an account."
    },
    "DepositAccountAccruedAmounts": {
      "type": "object",
      "properties": {
        "overdraftInterestAccrued": {
          "type": "number",
          "description": "The amount of overdraft interest that has been accrued in the account",
          "readOnly": true
        },
        "interestAccrued": {
          "type": "number",
          "description": "The amount of positive interest that has been accrued in the account",
          "readOnly": true
        },
        "technicalOverdraftInterestAccrued": {
          "type": "number",
          "description": "The amount of technical overdraft interest that has been accrued in the account",
          "readOnly": true
        },
        "negativeInterestAccrued": {
          "type": "number",
          "description": "The amount of negative interest that has been accrued in the account",
          "readOnly": true
        }
      },
      "description": "Groups all fields related to a deposit account's accrued amounts"
    },
    "TransactionDetails": {
      "type": "object",
      "properties": {
        "transactionChannelId": {
          "type": "string",
          "description": "The id of the transaction channel associated with the transaction details."
        },
        "transactionChannelKey": {
          "type": "string",
          "description": "The encoded key of the transaction channel associated with the transaction details."
        }
      },
      "description": "Contains the details about transaction including fields like transaction channel key and channel id"
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RestError"
          }
        }
      }
    },
    "DepositAccount": {
      "type": "object",
      "required": [
        "accountHolderKey",
        "accountHolderType",
        "name",
        "productTypeKey"
      ],
      "properties": {
        "accountState": {
          "type": "string",
          "description": "The state of the deposit account",
          "readOnly": true,
          "enum": [
            "PENDING_APPROVAL",
            "APPROVED",
            "ACTIVE",
            "ACTIVE_IN_ARREARS",
            "MATURED",
            "LOCKED",
            "DORMANT",
            "CLOSED",
            "CLOSED_WRITTEN_OFF",
            "WITHDRAWN",
            "CLOSED_REJECTED"
          ]
        },
        "migrationEventKey": {
          "type": "string",
          "description": "The migration event encoded key associated with this deposit account. If this account was imported, track which 'migration event' they came from.",
          "readOnly": true
        },
        "notes": {
          "type": "string",
          "description": "Extra notes about this deposit account"
        },
        "lastSetToArrearsDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "Date when the deposit account was set to In Arrears state, or null if the account is not In Arrears state (as Organization Time)",
          "readOnly": true
        },
        "assignedBranchKey": {
          "type": "string",
          "description": "Key of the branch this deposit account is assigned to"
        },
        "lastOverdraftInterestReviewDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "When the overdraft interest was last time reviewed",
          "readOnly": true
        },
        "lastInterestStoredDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "When/if the account had last interest applied (stored to balance) (as Organization Time)",
          "readOnly": true
        },
        "interestSettings": {
          "description": "Groups all fields related to interest settings",
          "$ref": "#/definitions/DepositAccountInterestSettings"
        },
        "balances": {
          "description": "Groups all fields related to a deposit account's balances",
          "$ref": "#/definitions/DepositAccountBalances"
        },
        "creditArrangementKey": {
          "type": "string",
          "description": "The key to the credit arrangement where this account is registered to"
        },
        "maturityDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "For fixed or compulsory savings plans, this is when the account matures (as Organization Time)",
          "readOnly": true
        },
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the deposit account, auto generated, unique",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The id of the deposit account, can be generated and customized, unique"
        },
        "overdraftSettings": {
          "description": "Groups all fields related to overdraft settings",
          "$ref": "#/definitions/DepositAccountOverdraftSettings"
        },
        "lastAccountAppraisalDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "When/if the account had last been evaluated for interest calculations/maturity (as Organization Time)",
          "readOnly": true
        },
        "withholdingTaxSourceKey": {
          "type": "string",
          "description": "The tax source from where the account withholding taxes will be updated"
        },
        "assignedUserKey": {
          "type": "string",
          "description": "Key of the user this deposit is assigned to"
        },
        "overdraftInterestSettings": {
          "description": "Groups all fields related to overdraft interest settings",
          "$ref": "#/definitions/DepositAccountOverdraftInterestSettings"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The last date the deposit account was updated (as UTC)",
          "readOnly": true
        },
        "accountType": {
          "type": "string",
          "description": "Indicates the type of the deposit account and the product that it belongs to",
          "enum": [
            "CURRENT_ACCOUNT",
            "REGULAR_SAVINGS",
            "FIXED_DEPOSIT",
            "SAVINGS_PLAN",
            "INVESTOR_ACCOUNT"
          ]
        },
        "lockedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this deposit account was locked (as Organization Time)",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this deposit account was created (as UTC)",
          "readOnly": true
        },
        "lastInterestCalculationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "When/if the account had the interest last calculated (as Organization Time)",
          "readOnly": true
        },
        "assignedCentreKey": {
          "type": "string",
          "description": "Key of the centre this account is assigned to"
        },
        "approvedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this deposit account was approved (as Organization Time)",
          "readOnly": true
        },
        "closedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this deposit account was closed (as UTC)",
          "readOnly": true
        },
        "accruedAmounts": {
          "description": "Groups all fields related to a deposit account's accrued amounts",
          "$ref": "#/definitions/DepositAccountAccruedAmounts"
        },
        "name": {
          "type": "string",
          "description": "The name of the deposit account"
        },
        "accountHolderKey": {
          "type": "string",
          "description": "The encodedKey of the client or group (a.k.a account holder)"
        },
        "productTypeKey": {
          "type": "string",
          "description": "The key to the type of product that this account is based on"
        },
        "activationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The date this deposit account was activated (as Organization Time)",
          "readOnly": true
        },
        "internalControls": {
          "description": "Groups all fields related to internal controls",
          "$ref": "#/definitions/DepositAccountInternalControls"
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency code"
        },
        "accountHolderType": {
          "type": "string",
          "description": "The type of the account holder (i.e CLIENT or GROUP)",
          "enum": [
            "CLIENT",
            "GROUP"
          ]
        },
        "linkedSettlementAccountKeys": {
          "type": "array",
          "description": "Lists all loan's keys on which the deposit is used as a settlement account.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      },
      "description": "An account where a customer holds his savings"
    },
    "LoanTranche": {
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "encodedKey": {
          "type": "string",
          "description": "The encoded key of the transaction details , auto generated, unique.",
          "readOnly": true
        },
        "amount": {
          "type": "number",
          "description": "The amount this tranche has available for disburse"
        },
        "fees": {
          "type": "array",
          "description": "Fees that are associated with this tranche",
          "items": {
            "$ref": "#/definitions/CustomPredefinedFee"
          }
        },
        "disbursementDetails": {
          "description": "The disbursement details of this tranche",
          "$ref": "#/definitions/TrancheDisbursementDetails"
        },
        "trancheNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Index indicating the tranche number"
        }
      },
      "description": "In some cases organizations may approve loans but not disburse the full amount initially. They would like to spread the disbursement (and risk) over time. Likewise for the client, they may not need the full loan amount up front. They may want to have a loan to buy some equipment for their business but will make one purchase today and another purchase in a few months.  In these cases, they don't need the full amount and wouldn't want to pay interest on cash they don't need yet. A solution for this matter is the usage of disbursement in tranches. This class holds the information required for one of this tranche. "
    },
    "PrepaymentSettings": {
      "type": "object",
      "properties": {
        "elementsRecalculationMethod": {
          "type": "string",
          "description": "The elements recalculation method, indicates how the declining balance with equal installments repayments are recalculated.",
          "enum": [
            "PRINCIPAL_EXPECTED_FIXED",
            "TOTAL_EXPECTED_FIXED"
          ]
        },
        "principalPaidInstallmentStatus": {
          "type": "string",
          "description": "Installment status for the case when principal is paid off (copied from loan product).",
          "enum": [
            "PARTIALLY_PAID",
            "PAID",
            "ORIGINAL_TOTAL_EXPECTED_PAID"
          ]
        },
        "prepaymentRecalculationMethod": {
          "type": "string",
          "description": "Prepayment recalculation method copied from the loan product on which this account is based.",
          "enum": [
            "NO_RECALCULATION",
            "RESCHEDULE_REMAINING_REPAYMENTS",
            "RECALCULATE_SCHEDULE_KEEP_SAME_NUMBER_OF_TERMS",
            "RECALCULATE_SCHEDULE_KEEP_SAME_PRINCIPAL_AMOUNT",
            "RECALCULATE_SCHEDULE_KEEP_SAME_TOTAL_REPAYMENT_AMOUNT",
            "REDUCE_AMOUNT_PER_INSTALLMENT",
            "REDUCE_NUMBER_OF_INSTALLMENTS",
            "REDUCE_NUMBER_OF_INSTALLMENTS_NEW"
          ]
        },
        "applyInterestOnPrepaymentMethod": {
          "type": "string",
          "description": "Apply interest on prepayment method copied from loan product on which this account is based.",
          "enum": [
            "AUTOMATIC",
            "MANUAL"
          ]
        }
      },
      "description": "The prepayment settings, holds all prepayment properties."
    },
    "DepositAccountOverdraftSettings": {
      "type": "object",
      "properties": {
        "allowOverdraft": {
          "type": "boolean",
          "description": "Whether this account supports overdraft or not"
        },
        "overdraftLimit": {
          "type": "number",
          "description": "How much may be taken out as overdraft, null means 0"
        },
        "overdraftExpiryDate": {
          "type": "string",
          "format": "date-time",
          "example": "2016-09-06T13:37:50+03:00",
          "description": "The expiration date of an overdraft"
        }
      },
      "description": "Groups all fields related to a deposit account's overdraft settings"
    },
    "DepositAccountSortingCriteria": {
      "type": "object",
      "required": [
        "field"
      ],
      "properties": {
        "field": {
          "type": "string",
          "description": "Contains the field that can be used as sorting selection. Can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId].",
          "enum": [
            "encodedKey",
            "id",
            "name",
            "creationDate",
            "activationDate",
            "approvedDate",
            "lastModifiedDate",
            "maturityDate",
            "lastSetToArrearsDate",
            "closedDate",
            "accountHolderName",
            "accruedAmounts.interestAccrued",
            "accruedAmounts.overdraftInterestAccrued",
            "accruedAmounts.technicalOverdraftInterestAccrued",
            "maxBalance",
            "balances.availableBalance",
            "balances.blockedBalance",
            "balances.feesDue",
            "balances.lockedBalance",
            "balances.overdraftAmount",
            "balances.technicalOverdraftAmount",
            "balances.totalBalance",
            "balances.holdBalance",
            "balances.overdraftInterestDue",
            "assignedBranchKey",
            "assignedCentreKey",
            "assignedUserKey",
            "interestSettings.interestRate",
            "currentInterestTier.startingBalance",
            "currentInterestTier.endingBalance",
            "currentInterestTier.index",
            "currentInterestTier.interestRate",
            "currentOverdraftInterestTier.startingBalance",
            "currentOverdraftInterestTier.endingBalance",
            "currentOverdraftInterestTier.index",
            "currentOverdraftInterestTier.interestRate",
            "internalControls.maxWithdrawalAmount",
            "internalControls.recommendedDepositAmount",
            "internalControls.targetAmount",
            "notes",
            "taxApplied",
            "taxRate",
            "withholdingTaxSourceKey",
            "lengthInDays",
            "productCategory",
            "overdraftInterestSettings.interestRateSettings.interestSpread",
            "overdraftInterestSettings.interestRateSettings.interestRate",
            "overdraftSettings.allowOverdraft",
            "overdraftSettings.overdraftExpiryDate",
            "overdraftSettings.overdraftLimit",
            "overdraftDaysInArrears",
            "overdraftInArrears",
            "overdraftAvailableLimit"
          ]
        },
        "order": {
          "type": "string",
          "description": "The sorting order: ASC or DESC. The default order is DESC.",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      },
      "description": "The sorting criteria used for Deposit accounts client directed query"
    },
    "TransactionDetailsInput": {
      "type": "object",
      "properties": {
        "transactionChannelId": {
          "type": "string",
          "description": "The id of the transaction channel associated with the transaction details."
        },
        "transactionChannelKey": {
          "type": "string",
          "description": "The encoded key of the transaction channel associated with the transaction details."
        }
      },
      "description": "Contains the details about transaction including fields like transaction channel key and channel ID"
    },
    "FinancialInstitutionIdentification": {
      "type": "object",
      "properties": {
        "bic": {
          "type": "string",
          "description": "Business identifier code"
        }
      },
      "description": "The identification of the financial institution"
    },
    "DepositAccountSearchCriteria": {
      "type": "object",
      "properties": {
        "sortingCriteria": {
          "description": "The sorting criteria",
          "$ref": "#/definitions/DepositAccountSortingCriteria"
        },
        "filterCriteria": {
          "type": "array",
          "description": "The list of filtering criteria",
          "items": {
            "$ref": "#/definitions/DepositAccountFilterCriteria"
          }
        }
      },
      "description": "Wrapper that holds a list of filtering criteria and a sorting criteria for Deposit account client directed query"
    },
    "InstallmentAllocationElementTaxableAmount": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "The installment allocation element amount.",
          "$ref": "#/definitions/Amount"
        },
        "tax": {
          "description": "The taxes amount on the income from the installment allocation element amount.",
          "$ref": "#/definitions/Amount"
        }
      },
      "description": "Represents an installment allocation element taxable amount structure."
    },
    "GetAuthorizationHold": {
      "type": "object",
      "required": [
        "advice",
        "amount",
        "externalReferenceId"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "description": "The amount of money to be held as a result of the authorization hold request."
        },
        "advice": {
          "type": "boolean",
          "description": "Whether the given request should be accepted without balance validations."
        },
        "cardAcceptor": {
          "description": "The card acceptor details.",
          "$ref": "#/definitions/CardAcceptor"
        },
        "creditDebitIndicator": {
          "type": "string",
          "description": "Indicates whether the authorization hold amount is credited or debited.If not provided, the default values is DBIT.",
          "enum": [
            "DBIT",
            "CRDT"
          ]
        },
        "cardToken": {
          "type": "string",
          "description": "The reference token of the card.",
          "readOnly": true
        },
        "externalReferenceId": {
          "type": "string",
          "description": "The external reference ID to be used to reference the account hold in subsequent requests."
        },
        "originalAmount": {
          "type": "number",
          "description": "The original amount of money to be held as a result of the authorization hold request."
        },
        "exchangeRate": {
          "type": "number",
          "description": "The exchange rate for the original currency."
        },
        "encodedKey": {
          "type": "string",
          "description": "The internal ID of the authorization hold, auto generated, unique.",
          "readOnly": true
        },
        "userTransactionTime": {
          "type": "string",
          "description": "The formatted time at which the user made this authorization hold."
        },
        "originalCurrency": {
          "type": "string",
          "description": "The original currency in which the hold was created."
        },
        "currencyCode": {
          "type": "string",
          "description": "The ISO currency code in which the hold was created. The amounts are stored in the base currency, but the user could have enter it in a foreign currency."
        },
        "status": {
          "type": "string",
          "description": "The authorization hold status.",
          "readOnly": true,
          "enum": [
            "PENDING",
            "REVERSED",
            "SETTLED",
            "EXPIRED"
          ]
        }
      },
      "description": "Details for retrieving a authorization hold. Deprecated due to encodedKey field."
    },
    "DepositAccountInternalControls": {
      "type": "object",
      "properties": {
        "maxDepositBalance": {
          "type": "number",
          "description": "The maximum deposit balance of the account"
        },
        "recommendedDepositAmount": {
          "type": "number",
          "description": "Recommended amount for a deposit"
        },
        "targetAmount": {
          "type": "number",
          "description": "The target amount (the monthly/weekly/daily deposits should/may lead towards a savings goal)"
        },
        "maxWithdrawalAmount": {
          "type": "number",
          "description": "The maximum amount allowed for a withdrawal"
        }
      },
      "description": "Groups all fields related to internal controls"
    }
  }
}
